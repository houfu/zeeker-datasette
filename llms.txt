<documents>
<document index="1">
<source>./Dockerfile</source>
<document_content>
FROM python:3.11-slim

# Install uv
COPY --from=ghcr.io/astral-sh/uv:latest /uv /usr/local/bin/uv

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    libsqlite3-dev \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Copy project files
# COPY pyproject.toml uv.lock* ./
COPY requirements.txt .
# Install Python dependencies with uv (faster) but fallback to pip
RUN if [ -f "uv.lock" ]; then \
        uv sync --frozen; \
    else \
        pip install --no-cache-dir -r requirements.txt; \
    fi
COPY scripts/ ./scripts/
COPY metadata.json .
COPY templates/ ./templates/
COPY static/ ./static/
COPY plugins/ ./plugins/

# Create data directory
RUN mkdir -p /data

# Environment variables
ENV DATASETTE_DATABASE_DIR=/data
ENV DATASETTE_TEMPLATE_DIR=/app/templates
ENV DATASETTE_PLUGINS_DIR=/app/plugins
ENV DATASETTE_STATIC_DIR=/app/static
ENV DATASETTE_METADATA=/app/metadata.json

# Port for Datasette
EXPOSE 8001

# Entry point script
COPY entrypoint.sh .
RUN chmod +x entrypoint.sh

ENTRYPOINT ["/app/entrypoint.sh"]
</document_content>
</document>
<document index="2">
<source>./LICENSE</source>
<document_content>
MIT License
Copyright (c) 2025 Ang Hou Fu

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
</document_content>
</document>
<document index="3">
<source>./Readme.md</source>
<document_content>
# data.zeeker.sg

A containerised **Datasette** deployment that serves Singapore‑focused legal datasets from SQLite files stored in S3. The container runs in *read‑only* (immutable) mode and can refresh itself automatically.

> **Heads‑up!** This repository ships the infrastructure only – it contains **no SQLite data**. To generate your own databases, run the companion ETL project **[sglawwatch‑to‑sqlite](https://github.com/houfu/sglawwatch-to-sqlite)** (or any tool that outputs SQLite) and upload the resulting `.db` files to your S3 bucket.

## Why this project?

* **One‑click deploy** – spin up Datasette with all databases already downloaded.
* **Immutable** – data cannot be mutated from the UI or API.
* **Simple refresh** – `scripts/manage.py refresh` pulls newer databases and restarts the container only if hashes changed.
* **Custom look & feel** – templates, JavaScript and CSS shipped in the image.
* **Fully portable** – runs anywhere Docker does; no external Python required.

## Features

* Auto‑download every `*.db` file from an S3 bucket at container start‑up (`scripts/download_from_s3.py`).
* Local cache under `/data`, mounted as `./data` when using *docker‑compose*.
* Optional nightly refresh via `zeeker-refresh-cron.sh` or manual `uv run scripts/manage.py refresh`.
* REST‑style JSON API exposed at `/db-name/table.json`, `/-/sql`, etc.
* Custom home page and banner indicating read‑only mode.

> **Need full‑text search or other plugins?** Add the plugin to `requirements.txt` (or `pyproject.toml`) and rebuild the image.

## Quick start (Docker)

```bash
git clone https://github.com/houfu/zeeker-datasette.git
cd zeeker-datasette

# Provide your credentials – see .env.example
cp .env.example .env
$EDITOR .env

# Build & run
docker compose up -d
```

Browse to **[http://localhost:8001](http://localhost:8001)**.

### Environment variables

| Variable                | Purpose                                             | Required | Default         |
| ----------------------- | --------------------------------------------------- | -------- | --------------- |
| `S3_BUCKET`             | Bucket containing the databases                     | ✅        | —               |
| `S3_PREFIX`             | Prefix/path inside the bucket                       |          | `latest`        |
| `S3_ENDPOINT_URL`       | Custom S3‑compatible endpoint (e.g. Contabo, MinIO) |          | *(AWS default)* |
| `AWS_REGION`            | AWS region                                          |          | `us-east-1`     |
| `AWS_ACCESS_KEY_ID`     | Access key if bucket is private                     |          | —               |
| `AWS_SECRET_ACCESS_KEY` | Secret key                                          |          | —               |

> **Tip** An example file (`.env.example`) is provided in the repo.

### Refreshing data

Pull new databases and restart the container only if something changed:

```bash
docker compose run --rm zeeker-datasette \
    uv run scripts/manage.py refresh
```

`--help` shows extra flags like `--force` or `--no-restart`. A ready‑to‑use cron wrapper lives in **`zeeker-refresh-cron.sh`**.

## Project layout

```
├── Dockerfile              # Production image definition
├── docker-compose.yml      # Local/dev deployment
├── scripts/
│   ├── download_from_s3.py # Start‑up download helper
│   └── manage.py           # CLI for refresh & status
├── templates/              # Jinja overrides for Datasette
├── static/                 # Custom JS & CSS
├── metadata.json           # Datasette configuration
└── data/                   # Mounted SQLite databases
```

## Development tips

* The compose file mounts `templates/` and `static/` so you can iterate without rebuilding.
* To add or update Python dependencies (including Datasette plugins) edit `requirements.txt` or `pyproject.toml` and rebuild:

```bash
docker compose build
docker compose up -d
```

* Follow logs with `docker compose logs -f zeeker-datasette`.

## License

MIT – see [LICENSE](LICENSE).

</document_content>
</document>
<document index="4">
<source>./docker-compose.yml</source>
<document_content>
services:
  zeeker-datasette:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: zeeker-datasette
    ports:
      - "127.0.0.1:8001:8001"
    environment:
      - S3_BUCKET=${S3_BUCKET}
      - S3_PREFIX=${S3_PREFIX:-latest}
      - S3_ENDPOINT_URL=${S3_ENDPOINT_URL}
      - AWS_REGION=${AWS_REGION:-default}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    volumes:
      - ./templates:/app/templates
      - ./static:/app/static
      - ./plugins:/app/plugins
      - ./metadata.json:/app/metadata.json
      # Mount local data directory for refresh functionality
      - ./data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
</document_content>
</document>
<document index="5">
<source>./entrypoint.sh</source>
<document_content>
#!/bin/bash
set -e

# Run the S3 download script if S3_BUCKET is provided
if [ -n "$S3_BUCKET" ]; then
    echo "Downloading databases from S3 bucket: $S3_BUCKET"
    python /app/scripts/download_from_s3.py
else
    echo "No S3_BUCKET specified, skipping database download"
fi

# Check if any databases were downloaded
if [ -z "$(ls -A /data)" ]; then
    echo "Warning: No databases found in /data directory"
fi

# List downloaded databases
echo "Available databases:"
ls -la /data

# Start Datasette with immutable flag
echo "Starting Datasette in immutable mode"
exec datasette serve --host 0.0.0.0 --port 8001 \
    --metadata /app/metadata.json \
    --template-dir /app/templates \
    --plugins-dir /app/plugins \
    --static static:/app/static \
    --immutable \
    $(ls /data/*.db)
</document_content>
</document>
<document index="6">
<source>./metadata.json</source>
<document_content>
{
  "title": "data.zeeker.sg - The Data Backbone",
  "description": "Singapore's open legal data resource for data applications and AI - Professional, tech-forward data exploration platform",
  "license": "CC-BY-4.0",
  "license_url": "https://creativecommons.org/licenses/by/4.0/",
  "source": "Various Singapore legal sources",
  "source_url": "https://data.zeeker.sg/templates/pages/sources",
  "about": "Providing free access to Singapore legal resources for data applications, analysis, and AI training with a cutting-edge interface designed for legal professionals",
  "about_url": "https://data.zeeker.sg/templates/pages/about",
  "databases": {
    "*": {
      "allow_sql": true,
      "allow_facet": true,
      "allow_download": true
    }
  },
  "plugins": {
    "datasette-search-all": {
      "template": "Search across all Singapore legal resources"
    }
  },
  "extra_css_urls": [
    "https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600&family=JetBrains+Mono:wght@400;500&display=swap",
    "/static/css/zeeker-theme.css"
  ],
  "extra_js_urls": [
    "/static/js/zeeker-enhanced.js"
  ],
  "menu_links": [
    {
      "href": "/",
      "label": "Home"
    },
    {
      "href": "/-/metadata",
      "label": "API Info"
    },
    {
      "href": "/templates/pages/about",
      "label": "About"
    }
  ]
}
</document_content>
</document>
<document index="7">
<source>./requirements.txt</source>
<document_content>
datasette>=0.64.3
boto3>=1.28.0
click>=8.1.3
python-dotenv>=1.0.0
datasette-search-all
</document_content>
</document>
<document index="8">
<source>./zeeker-refresh-cron.sh</source>
<document_content>
#!/bin/bash
set -e

# Change to project directory
cd ~/zeeker-datasette

# Load environment variables from .env file
if [ -f ".env" ]; then
    export $(grep -v '^#' .env | xargs)
else
    echo "Warning: No .env file found"
fi

# Log start time
echo "$(date): Starting Datasette refresh..."

# Run refresh using UV
if uv run scripts/manage.py refresh --verbose; then
    echo "$(date): Refresh completed successfully"
    exit 0
else
    echo "$(date): Refresh failed" >&2
    exit 1
fi
</document_content>
</document>
<document index="9">
<source>./plugins/__init__.py</source>
<document_content>

</document_content>
</document>
<document index="10">
<source>./plugins/template_filters.py</source>
<document_content>
"""
Datasette plugin to add template filters including pluralize and safe formatting
"""
from datasette import hookimpl
from jinja2.runtime import Undefined


def pluralize_filter(value, arg="s"):
    """
    Returns a plural suffix if the value is not 1.

    Usage in templates:
    {{ count }} item{{ count|pluralize }}
    {{ count }} categor{{ count|pluralize:"ies,y" }}
    """
    try:
        # Convert value to int for comparison
        num_value = int(value) if value is not None else 0
    except (ValueError, TypeError):
        # If can't convert to int, assume plural
        num_value = 0

    if "," not in str(arg):
        # Simple case: add suffix if not 1
        return "" if num_value == 1 else str(arg)
    else:
        # Django-style: "plural,singular"
        try:
            plural, singular = str(arg).split(",", 1)
            return singular.strip() if num_value == 1 else plural.strip()
        except (ValueError, AttributeError):
            return "" if num_value == 1 else "s"


def safe_format_filter(value, format_string="{:,}"):
    """
    Safely format numbers, handling undefined values

    Usage in templates:
    {{ count|safe_format }}
    {{ count|safe_format("{:.2f}") }}
    """
    if isinstance(value, Undefined) or value is None:
        return "—"

    try:
        # Try to convert to number first
        if isinstance(value, str):
            if value.isdigit():
                value = int(value)
            else:
                try:
                    value = float(value)
                except ValueError:
                    return str(value)

        return format_string.format(value)
    except (ValueError, TypeError):
        return str(value) if not isinstance(value, Undefined) else "—"


def safe_int_filter(value, default=0):
    """
    Safely convert value to int, with fallback

    Usage in templates:
    {{ count|safe_int }}
    {{ count|safe_int(default=10) }}
    """
    if isinstance(value, Undefined) or value is None:
        return default

    try:
        return int(value)
    except (ValueError, TypeError):
        return default


def filesizeformat_filter(value):
    """
    Format file sizes in human readable format
    """
    if isinstance(value, Undefined) or value is None:
        return "—"

    try:
        bytes_value = float(value)
    except (ValueError, TypeError):
        return str(value)

    if bytes_value < 1024:
        return f"{bytes_value:.0f} bytes"
    elif bytes_value < 1024 ** 2:
        return f"{bytes_value / 1024:.1f} KB"
    elif bytes_value < 1024 ** 3:
        return f"{bytes_value / (1024 ** 2):.1f} MB"
    else:
        return f"{bytes_value / (1024 ** 3):.1f} GB"


@hookimpl
def prepare_jinja2_environment(env):
    """Add custom filters to Jinja2 environment"""
    env.filters["pluralize"] = pluralize_filter
    env.filters["safe_format"] = safe_format_filter
    env.filters["safe_int"] = safe_int_filter

    # Only add filesizeformat if not already present
    if "filesizeformat" not in env.filters:
        env.filters["filesizeformat"] = filesizeformat_filter

    return env
</document_content>
</document>
<document index="11">
<source>./scripts/convert_hero_image.py</source>
<document_content>
#!/usr/bin/env python3
# /// script
# dependencies = [
#     "pillow>=10.0.0",
# ]
# ///
"""
Zeeker Image Converter - Convert hero images to WebP with multiple sizes
Run with: uv run scripts/convert_hero_image.py
"""

import os
from pathlib import Path
from PIL import Image, ImageOps
import sys


def convert_hero_image(input_path: str, output_dir: str = "static/images"):
    """Convert hero image to multiple WebP formats with PNG fallbacks."""

    input_path = Path(input_path)
    output_dir = Path(output_dir)
    output_dir.mkdir(parents=True, exist_ok=True)

    if not input_path.exists():
        print(f"❌ Input file not found: {input_path}")
        return False

    print(f"🖼️  Converting {input_path.name}...")

    # Configuration for different sizes
    sizes = {
        "desktop": {
            "size": (2560, 1440),
            "quality_webp": 85,
            "quality_png": 95,
            "suffix": ""
        },
        "mobile": {
            "size": (1280, 720),
            "quality_webp": 80,
            "quality_png": 90,
            "suffix": "-mobile"
        },
        "tablet": {
            "size": (1920, 1080),
            "quality_webp": 82,
            "quality_png": 92,
            "suffix": "-tablet"
        }
    }

    try:
        with Image.open(input_path) as img:
            print(f"📏 Original size: {img.size}")
            print(f"🎨 Original mode: {img.mode}")

            # Convert to RGB if necessary
            if img.mode in ('RGBA', 'LA', 'P'):
                print("🔄 Converting to RGB...")
                # Create white background for transparent images
                background = Image.new('RGB', img.size, (255, 255, 255))
                if img.mode == 'P':
                    img = img.convert('RGBA')
                if img.mode == 'RGBA':
                    background.paste(img, mask=img.split()[-1])
                    img = background
                else:
                    img = img.convert('RGB')

            base_name = "holographic-building"

            for size_name, config in sizes.items():
                print(f"\n📐 Creating {size_name} version ({config['size'][0]}x{config['size'][1]})...")

                # Resize with high quality
                resized = img.copy()
                resized = ImageOps.fit(
                    resized,
                    config["size"],
                    Image.Resampling.LANCZOS,
                    centering=(0.5, 0.5)
                )

                # Save WebP
                webp_path = output_dir / f"{base_name}{config['suffix']}.webp"
                resized.save(
                    webp_path,
                    'WebP',
                    quality=config['quality_webp'],
                    optimize=True,
                    method=6  # Best compression
                )

                # Save PNG fallback
                png_path = output_dir / f"{base_name}{config['suffix']}.png"
                resized.save(
                    png_path,
                    'PNG',
                    optimize=True,
                    compress_level=6
                )

                # Get file sizes
                webp_size = webp_path.stat().st_size / 1024  # KB
                png_size = png_path.stat().st_size / 1024  # KB
                savings = ((png_size - webp_size) / png_size) * 100

                print(f"  ✅ WebP: {webp_size:.1f}KB")
                print(f"  ✅ PNG:  {png_size:.1f}KB")
                print(f"  💾 Savings: {savings:.1f}%")

        print(f"\n🎉 Conversion complete! Files saved to {output_dir}")
        return True

    except Exception as e:
        print(f"❌ Error converting image: {e}")
        return False


def main():
    """Main function to handle command line arguments."""
    if len(sys.argv) < 2:
        print("Usage: uv run convert_hero_image.py <input_image_path> [output_directory]")
        print("Example: uv run convert_hero_image.py original_building.png static/images")
        return

    input_path = sys.argv[1]
    output_dir = sys.argv[2] if len(sys.argv) > 2 else "static/images"

    success = convert_hero_image(input_path, output_dir)

    if success:
        print("\n📋 Next steps:")
        print("1. Update your CSS to use the new WebP images")
        print("2. Add the WebP detection JavaScript")
        print("3. Test the site with different browsers")
        print("4. Consider using a CDN for even better performance")
    else:
        sys.exit(1)


if __name__ == "__main__":
    main()
</document_content>
</document>
<document index="12">
<source>./scripts/download_from_s3.py</source>
<document_content>
#!/usr/bin/env python
"""
Download SQLite databases from an S3 bucket to local storage.
"""
import os
import sys
import boto3
import logging
from pathlib import Path

# Configure logging
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s - %(levelname)s - %(message)s",
    handlers=[logging.StreamHandler()],
)
logger = logging.getLogger("s3-downloader")


def download_from_s3():
    """Download all .db files from the specified S3 bucket to /data directory."""
    # Get S3 configuration from environment variables
    s3_bucket = os.environ.get("S3_BUCKET")
    s3_prefix = os.environ.get("S3_PREFIX", "")
    aws_region = os.environ.get("AWS_REGION", "us-east-1")

    if not s3_bucket:
        logger.error("S3_BUCKET environment variable is required")
        sys.exit(1)

    # Create data directory if it doesn't exist
    data_dir = Path("/data")
    data_dir.mkdir(exist_ok=True)

    try:
        # Initialize S3 client
        s3_endpoint_url = os.environ.get("S3_ENDPOINT_URL")
        s3 = boto3.client(
            "s3",
            region_name=aws_region,
            endpoint_url=s3_endpoint_url if s3_endpoint_url else None
        )

        # List objects in the bucket with the given prefix
        logger.info(f"Listing objects in s3://{s3_bucket}/{s3_prefix}")

        paginator = s3.get_paginator("list_objects_v2")
        page_iterator = paginator.paginate(Bucket=s3_bucket, Prefix=s3_prefix)

        # Track if we found any database files
        found_files = False

        # Download each .db file
        for page in page_iterator:
            if "Contents" not in page:
                continue

            for obj in page["Contents"]:
                key = obj["Key"]

                # Only download .db files
                if not key.endswith(".db"):
                    continue

                found_files = True
                filename = os.path.basename(key)
                local_path = data_dir / filename

                logger.info(f"Downloading {key} to {local_path}")
                s3.download_file(s3_bucket, key, str(local_path))
                logger.info(f"Successfully downloaded {filename}")

        if not found_files:
            logger.warning(f"No .db files found in s3://{s3_bucket}/{s3_prefix}")

    except Exception as e:
        logger.error(f"Error downloading files: {e}")
        sys.exit(1)


if __name__ == "__main__":
    download_from_s3()
</document_content>
</document>
<document index="13">
<source>./scripts/manage.py</source>
<document_content>
# !/usr/bin/env python3
# /// script
# dependencies = [
#     "boto3>=1.28.0",
#     "click>=8.1.3", 
#     "python-dotenv>=1.0.0",
# ]
# ///
"""
Management commands for zeeker-datasette with inline dependencies
"""
import hashlib
import logging
import os
import shutil
import subprocess
from datetime import datetime
from pathlib import Path

import boto3
import click
from dotenv import load_dotenv


def setup_logging(verbose=False):
    """Setup logging configuration"""
    level = logging.DEBUG if verbose else logging.INFO
    logging.basicConfig(
        level=level,
        format="%(asctime)s - %(levelname)s - %(message)s",
        handlers=[
            logging.FileHandler("/var/log/datasette-refresh.log"),
            logging.StreamHandler(),
        ],
    )
    return logging.getLogger("datasette-refresh")


def calculate_directory_hash(directory):
    """Calculate hash of all .db files in directory"""
    hash_md5 = hashlib.md5()
    directory = Path(directory)

    if not directory.exists():
        return None

    db_files = sorted(directory.glob("*.db"))
    for db_file in db_files:
        if db_file.is_file():
            with open(db_file, "rb") as f:
                for chunk in iter(lambda: f.read(4096), b""):
                    hash_md5.update(chunk)

    return hash_md5.hexdigest()


def download_from_s3_to_dir(target_dir, logger):
    """Download databases from S3 to specific directory"""
    s3_bucket = os.environ.get("S3_BUCKET")
    s3_prefix = os.environ.get("S3_PREFIX", "")
    aws_region = os.environ.get("AWS_REGION", "us-east-1")

    if not s3_bucket:
        logger.error("S3_BUCKET environment variable is required")
        return False

    target_path = Path(target_dir)
    target_path.mkdir(exist_ok=True, parents=True)

    try:
        s3_endpoint_url = os.environ.get("S3_ENDPOINT_URL")
        s3 = boto3.client(
            "s3",
            region_name=aws_region,
            endpoint_url=s3_endpoint_url if s3_endpoint_url else None,
        )

        logger.info(f"Downloading from s3://{s3_bucket}/{s3_prefix}")

        paginator = s3.get_paginator("list_objects_v2")
        page_iterator = paginator.paginate(Bucket=s3_bucket, Prefix=s3_prefix)

        found_files = False
        for page in page_iterator:
            if "Contents" not in page:
                continue

            for obj in page["Contents"]:
                key = obj["Key"]
                if not key.endswith(".db"):
                    continue

                found_files = True
                filename = os.path.basename(key)
                local_path = target_path / filename

                logger.info(f"Downloading {key} to {local_path}")
                s3.download_file(s3_bucket, key, str(local_path))

        if not found_files:
            logger.warning(f"No .db files found in s3://{s3_bucket}/{s3_prefix}")

        return True

    except Exception as e:
        logger.error(f"Error downloading files: {e}")
        return False


@click.group()
@click.version_option()
def cli():
    """Zeeker Datasette Management Commands"""
    pass


@cli.command()
@click.option("--force", is_flag=True, help="Force refresh even if no changes detected")
@click.option("--no-restart", is_flag=True, help="Download data but don't restart container")
@click.option("--verbose", "-v", is_flag=True, help="Verbose logging")
@click.option("--staging-dir", default="/tmp/datasette-staging", help="Staging directory")
def refresh(force, no_restart, verbose, staging_dir):
    """Refresh Datasette data from S3"""
    logger = setup_logging(verbose)

    # Load environment variables
    env_file = Path(__file__).parent.parent / ".env"
    if env_file.exists():
        load_dotenv(env_file)

    try:
        # Get project directory
        project_dir = Path(__file__).parent.parent
        data_dir = project_dir / "data"
        staging_path = Path(staging_dir)

        logger.info("Starting Datasette data refresh")

        # Create directories
        data_dir.mkdir(exist_ok=True)
        staging_path.mkdir(exist_ok=True, parents=True)

        # Get current data hash
        current_hash = calculate_directory_hash(data_dir)
        logger.debug(f"Current data hash: {current_hash}")

        # Download fresh data
        logger.info("Downloading fresh data from S3...")
        if not download_from_s3_to_dir(staging_path, logger):
            logger.error("Failed to download data from S3")
            return False

        # Calculate new hash
        new_hash = calculate_directory_hash(staging_path)
        logger.debug(f"New data hash: {new_hash}")

        if not force and current_hash == new_hash:
            logger.info("No data changes detected, skipping update")
            shutil.rmtree(staging_path)
            return True

        logger.info("Data changes detected, updating...")

        # Backup current data
        backup_dir = project_dir / f"data.backup.{datetime.now().strftime('%Y%m%d_%H%M%S')}"
        if data_dir.exists() and any(data_dir.glob("*.db")):
            shutil.copytree(data_dir, backup_dir)
            logger.info(f"Backed up current data to {backup_dir}")

        # Clear current data and move new data
        for db_file in data_dir.glob("*.db"):
            db_file.unlink()

        for db_file in staging_path.glob("*.db"):
            shutil.move(str(db_file), data_dir / db_file.name)
            logger.info(f"Updated {db_file.name}")

        shutil.rmtree(staging_path)

        # Restart container unless disabled
        if not no_restart:
            logger.info("Restarting Docker container...")
            result = subprocess.run(
                ["docker", "compose", "restart", "zeeker-datasette"],
                cwd=project_dir,
                capture_output=True,
                text=True,
            )

            if result.returncode != 0:
                logger.error(f"Failed to restart container: {result.stderr}")
                return False

            logger.info("Container restarted successfully")

        logger.info("Datasette refresh completed successfully")
        return True

    except Exception as e:
        logger.error(f"Error during refresh: {e}", exc_info=True)
        return False


@cli.command()
def status():
    """Show current status of data and services"""
    project_dir = Path(__file__).parent.parent
    data_dir = project_dir / "data"

    click.echo("=== Zeeker Datasette Status ===")

    # Check data directory
    if not data_dir.exists():
        click.echo("❌ Data directory does not exist")
        return

    db_files = list(data_dir.glob("*.db"))
    if not db_files:
        click.echo("❌ No database files found")
    else:
        click.echo(f"✅ Found {len(db_files)} database file(s):")
        for db_file in db_files:
            size = db_file.stat().st_size / (1024 * 1024)  # MB
            mtime = datetime.fromtimestamp(db_file.stat().st_mtime)
            click.echo(f"   📁 {db_file.name} ({size:.1f}MB, modified: {mtime})")

    # Check Docker container
    try:
        result = subprocess.run(
            ["docker", "compose", "ps", "zeeker-datasette"],
            cwd=project_dir,
            capture_output=True,
            text=True,
        )
        if result.returncode == 0 and "Up" in result.stdout:
            click.echo("✅ Docker container is running")
        else:
            click.echo("❌ Docker container is not running")
    except Exception:
        click.echo("❓ Could not check Docker container status")

    # Check environment
    env_file = project_dir / ".env"
    if env_file.exists():
        click.echo("✅ Environment file found")
    else:
        click.echo("❌ No .env file found")


if __name__ == "__main__":
    cli()
EOF

</document_content>
</document>
<document index="14">
<source>./templates/database.html</source>
<document_content>
{% extends "default:database.html" %}

{% block extra_head %}
{{ super() }}
<meta name="description" content="Explore {{ database }} legal database - {{ database_description or 'Singapore legal data for research and analysis' }}">
{% endblock %}

{% block nav %}
<header>
  <div class="header-content">
    <div class="header-left">
      <div class="logo">data.zeeker.sg</div>
      <div class="tagline">The Legal Data Backbone of the Zeeker Project</div>
    </div>
    <nav>
      <ul>
        <li><a href="/">Home</a></li>
        <li><a href="/-/metadata">API Info</a></li>
        <li><a href="/templates/pages/about">About</a></li>
      </ul>
    </nav>
  </div>
</header>
{% endblock %}

{% block content %}
<div class="database-header">
  <!-- Breadcrumbs stay outside the card -->
  <div class="breadcrumbs">
    <a href="/">🏠 Home</a>
    <span class="separator">→</span>
    <span>{{ database|title }}</span>
  </div>

  <!-- IMPROVED: Wrap everything in a proper overview card -->
  <div class="database-overview">
    <div class="database-info">

      <!-- Left side: Title, description, stats -->
      <div class="database-summary">
        <h1 class="database-title">{{ database|title }} Database</h1>

        {% if database_description %}
        <p class="database-subtitle">{{ database_description }}</p>
        {% else %}
        <p class="database-subtitle">
          Professional access to Singapore's legal data for research, analysis, and AI applications
        </p>
        {% endif %}

        <!-- Database Statistics -->
        <div class="database-stats">
          {% if tables %}
          <div class="stat-item">
            <span class="stat-number">{{ tables|length }}</span>
            <span class="stat-label">table{{ tables|length|pluralize }}</span>
          </div>
          {% endif %}

          {% if tables %}
          {% set total_rows = tables|sum(attribute='count')|default(0) %}
          {% if total_rows > 0 %}
          <div class="stat-item">
            <span class="stat-number">{{ "{:,}".format(total_rows) }}</span>
            <span class="stat-label">total rows</span>
          </div>
          {% endif %}
          {% endif %}

          {% if database_size is defined and database_size %}
          <div class="stat-item">
            <span class="stat-number">{{ database_size|filesizeformat }}</span>
            <span class="stat-label">database size</span>
          </div>
          {% endif %}
        </div>
      </div>

      <!-- Right side: Search and actions -->
      <div class="database-actions-section">
        <!-- Export Actions -->
        <div class="export-actions">
          <a href="/{{ database }}.json" class="btn btn-secondary">📊 JSON</a>
          <a href="/{{ database }}.csv" class="btn btn-secondary">📈 CSV</a>
          <a href="/{{ database }}?sql=SELECT+*+FROM+sqlite_master+WHERE+type%3D%27table%27" class="btn btn-secondary">🔍 Schema</a>
        </div>

      </div>
    </div>
  </div>
</div>

{% if search_query %}
<div class="card">
  <div class="card-header">
    <h2 class="card-title">Search Results for "{{ search_query }}"</h2>
    <p class="card-description">
      {% if search_results %}
      Found {{ search_results|length }} matching table{{ search_results|length|pluralize }}
      {% else %}
      No tables found matching your search.
      {% endif %}
    </p>
  </div>
</div>
{% endif %}

{% if tables %}
<section class="tables-section">
  {% if not search_query %}
  <h2>Available Tables</h2>
  {% endif %}

  <div class="tables-grid">
    {% for table in tables %}
    <div class="card table-card">
      <div class="table-header">
        <h3>
          <a href="/{{ database }}/{{ table.name }}">{{ table.name|title }}</a>
        </h3>

        <div class="table-badges">
          {% if table.count is defined and table.count is not none %}
          <span class="badge badge-rows">{{ "{:,}".format(table.count) }} rows</span>
          {% endif %}
          
          {% if table.columns %}
          <span class="badge badge-columns">{{ table.columns|length }} columns</span>
          {% endif %}
          
          {% if table.fts %}
          <span class="badge badge-fts">🔍 Searchable</span>
          {% endif %}
          
          {% if table.has_primary_key %}
          <span class="badge badge-pk">🔑 Primary Key</span>
          {% endif %}
        </div>
      </div>
      
      {% if table.description %}
      <p class="table-description">{{ table.description }}</p>
      {% endif %}
      
      {% if table.columns %}
      <div class="table-schema">
        <h4>Key Columns:</h4>
        <div class="column-list">
          {% for column in table.columns[:5] %}
          <div class="column-item">
            <span class="column-name">{{ column.name }}</span>
            <span class="column-type">{{ column.type }}</span>
            {% if column.is_pk %}
            <span class="column-flag">PK</span>
            {% endif %}
            {% if column.notnull %}
            <span class="column-flag">NOT NULL</span>
            {% endif %}
          </div>
          {% endfor %}
          {% if table.columns|length > 5 %}
          <div class="column-item more-columns">
            <em>...and {{ table.columns|length - 5 }} more column{{ (table.columns|length - 5)|pluralize }}</em>
          </div>
          {% endif %}
        </div>
      </div>
      {% endif %}
      
      {% if table.sample_rows %}
      <div class="table-preview">
        <h4>Sample Data:</h4>
        <div class="preview-table">
          <table>
            <thead>
              <tr>
                {% for column in table.columns[:3] %}
                <th>{{ column.name }}</th>
                {% endfor %}
                {% if table.columns|length > 3 %}
                <th>...</th>
                {% endif %}
              </tr>
            </thead>
            <tbody>
              {% for row in table.sample_rows[:2] %}
              <tr>
                {% for cell in row[:3] %}
                <td>{{ cell|truncate(30) }}</td>
                {% endfor %}
                {% if table.columns|length > 3 %}
                <td>...</td>
                {% endif %}
              </tr>
              {% endfor %}
            </tbody>
          </table>
        </div>
      </div>
      {% endif %}
      
      <div class="table-actions">
        <a href="/{{ database }}/{{ table.name }}" class="btn btn-primary">Explore Table</a>
        <a href="/{{ database }}/{{ table.name }}.json" class="btn">JSON</a>
        <a href="/{{ database }}/{{ table.name }}.csv" class="btn">CSV</a>
        {% if table.fts %}
        <a href="/{{ database }}/{{ table.name }}?_search=" class="btn">🔍 Search</a>
        {% endif %}
      </div>
    </div>
    {% endfor %}
  </div>
</section>
{% else %}
<section class="no-tables">
  <div class="card">
    <h2>No Tables Available</h2>
    {% if search_query %}
    <p>No tables found matching "{{ search_query }}". Try a different search term or <a href="/{{ database }}">view all tables</a>.</p>
    {% else %}
    <p>This database doesn't contain any tables yet. Check back later as data is synchronized from the cloud.</p>
    {% endif %}
  </div>
</section>
{% endif %}

{% if views %}
<section class="views-section">
  <h2>Available Views</h2>
  <div class="views-grid">
    {% for view in views %}
    <div class="card view-card">
      <h3>
        <a href="/{{ database }}/{{ view.name }}">{{ view.name|title }}</a>
      </h3>
      
      {% if view.description %}
      <p class="view-description">{{ view.description }}</p>
      {% endif %}
      
      <div class="view-actions">
        <a href="/{{ database }}/{{ view.name }}" class="btn btn-primary">Query View</a>
        <a href="/{{ database }}/{{ view.name }}.json" class="btn">JSON</a>
      </div>
    </div>
    {% endfor %}
  </div>
</section>
{% endif %}

<section class="database-tools">
  <div class="card">
    <h2>🛠️ Database Tools</h2>
    
    <div class="tools-grid">
      <div class="tool">
        <h3>💻 SQL Query</h3>
        <p>Run custom SQL queries against this database</p>
        <a href="/{{ database }}?sql=" class="btn">Open SQL Editor</a>
      </div>
      
      <div class="tool">
        <h3>📊 Schema Explorer</h3>
        <p>Explore database structure and relationships</p>
        <a href="/{{ database }}?sql=SELECT+name,+sql+FROM+sqlite_master+WHERE+type%3D%27table%27+ORDER+BY+name" class="btn">View Schema</a>
      </div>
      
      <div class="tool">
        <h3>📈 Data Export</h3>
        <p>Export entire database in various formats</p>
        <div class="export-options">
          <a href="/{{ database }}.json" class="btn">Complete JSON</a>
          <a href="/{{ database }}.csv" class="btn">Complete CSV</a>
          <a href="/{{ database }}.db" class="btn">SQLite File</a>
        </div>
      </div>
      
      <div class="tool">
        <h3>🔍 Advanced Search</h3>
        <p>Search across all tables in this database</p>
        <a href="/-/search?database={{ database }}" class="btn">Search Database</a>
      </div>
    </div>
  </div>
</section>

{% if canned_queries %}
<section class="canned-queries">
  <div class="card">
    <h2>📋 Saved Queries</h2>
    <p>Pre-built queries for common legal research tasks</p>
    
    <div class="queries-grid">
      {% for query in canned_queries %}
      <div class="query-card">
        <h3>{{ query.title }}</h3>
        {% if query.description %}
        <p class="query-description">{{ query.description }}</p>
        {% endif %}
        <div class="query-actions">
          <a href="/{{ database }}?{{ query.name }}" class="btn btn-primary">Run Query</a>
          <a href="/{{ database }}?{{ query.name }}&_format=json" class="btn">JSON</a>
        </div>
      </div>
      {% endfor %}
    </div>
  </div>
</section>
{% endif %}
{% endblock %}
</document_content>
</document>
<document index="15">
<source>./templates/index.html</source>
<document_content>
{% extends "default:index.html" %}

{% block extra_head %}
{{ super() }}
<meta name="description" content="Zeeker - Singapore's tech-forward legal data backbone for data applications and AI. Professional access to court decisions, legal documents, and regulatory information.">
<meta name="keywords" content="Singapore law, legal data, court decisions, legal documents, AI training data, legal research">
<meta property="og:title" content="data.zeeker.sg - The Legal Data Backbone of the Zeeker Project">
<meta property="og:description" content="A datastore to Singapore's legal data for data applications and AI">
<meta property="og:type" content="website">

<!-- Preload critical hero image -->
<link rel="preload" href="/static/images/supcourt-sg.png" as="image">
{% endblock %}

{% block nav %}
<header>
  <div class="header-content">
    <div class="header-left">
      <div class="logo">data.zeeker.sg</div>
      <div class="tagline">The Legal Data Backbone of the Zeeker Project</div>
    </div>
    <nav>
      <ul>
        <li><a href="/">Home</a></li>
        <li><a href="/-/metadata">API Info</a></li>
        <li><a href="/templates/pages/about">About</a></li>
      </ul>
    </nav>
  </div>
</header>
{% endblock %}

{% block content %}
<!-- Enhanced Hero Banner Section -->
<section class="hero-enhanced">
    <div class="hero-bg-container">
        <picture class="hero-background-picture">
            <!-- WebP versions for modern browsers -->
            <source
                media="(max-width: 768px)"
                srcset="/static/images/supcourt-sg-mobile.webp"
                type="image/webp">
            <source
                media="(max-width: 1024px)"
                srcset="/static/images/supcourt-sg-tablet.webp"
                type="image/webp">
            <source
                media="(min-width: 1025px)"
                srcset="/static/images/supcourt-sg.webp"
                type="image/webp">

            <!-- PNG fallbacks -->
            <source
                media="(max-width: 768px)"
                srcset="/static/images/supcourt-sg-mobile.png">
            <source
                media="(max-width: 1024px)"
                srcset="/static/images/supcourt-sg-tablet.png">

            <!-- Default fallback -->
            <img
                src="/static/images/supcourt-sg.png"
                alt="Singapore Supreme Court"
                class="hero-background-image loading"
                loading="eager">
        </picture>
        <div class="hero-overlay-gradient"></div>
    </div>

    <div class="hero-content-wrapper">
        <div class="hero-glass-card">
            <h1 class="hero-title-main">data.zeeker.sg</h1>
            <p class="hero-tagline-main">
                Singapore's premier legal data backbone for research, analysis, and AI innovation
            </p>

            <div class="hero-search-container">
                <form class="hero-search-form" action="/-/search">
                    <div class="hero-search-wrapper">
                        <input
                            type="search"
                            name="q"
                            class="hero-search-input"
                            placeholder="Search across all legal databases..."
                            aria-label="Search legal data"
                        >
                    </div>
                </form>
            </div>

            <div class="hero-cta-group">
                <a href="/-/search" class="cta-primary">
                    🔍 Start Searching
                </a>
                <a href="/-/metadata" class="cta-secondary">
                    📊 Explore API
                </a>
            </div>

            <div class="hero-features">
                <div class="hero-feature">
                    <span class="hero-feature-icon">🏛️</span>
                    <span>10K+ Court Decisions</span>
                </div>
                <div class="hero-feature">
                    <span class="hero-feature-icon">📊</span>
                    <span>RESTful API Access</span>
                </div>
                <div class="hero-feature">
                    <span class="hero-feature-icon">🔒</span>
                    <span>Immutable Data</span>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Add proper spacing before next section -->
<div class="section-spacer"></div>

{% if databases %}
<section class="databases-section">
  <h2>Available Legal Resources</h2>
  <div class="database-grid">
    {% for database in databases %}
    <div class="card database-card">
      <h3>
        <a href="/{{ database.name }}">{{ database.name|title }}</a>
      </h3>
      <div class="database-meta">
        {% if database.table_count is defined and database.table_count %}
        <span class="table-count">{{ database.table_count }} table{{ database.table_count|pluralize }}</span>
        {% endif %}
        {% if database.size is defined and database.size %}
        <span class="database-size">{{ database.size|filesizeformat }}</span>
        {% endif %}
      </div>
      {% if database.description %}
      <p class="database-description">{{ database.description }}</p>
      {% endif %}

      <div class="database-actions">
        <a href="/{{ database.name }}" class="btn">Explore Data</a>
        <a href="/{{ database.name }}.json" class="btn btn-secondary">API</a>
      </div>

      {% if database.tables %}
      <div class="table-preview">
        <h4>Key Tables:</h4>
        <ul>
          {% for table in database.tables[:3] %}
          <li>
            <a href="/{{ database.name }}/{{ table.name }}">{{ table.name|title }}</a>
            {% if table.count is defined and table.count %}<span class="row-count">({{ table.count|safe_format }} rows)</span>{% endif %}
          </li>
          {% endfor %}
          {% if database.tables|length > 3 %}
          <li><em>...and {{ database.tables|length - 3 }} more</em></li>
          {% endif %}
        </ul>
      </div>
      {% endif %}
    </div>
    {% endfor %}
  </div>
</section>
{% else %}
<section class="no-databases">
  <div class="card">
    <h2>🚀 Setting Up Your Legal Data</h2>
    <p>This Zeeker instance is ready to serve Singapore's legal data. Databases will appear here once they're loaded from your configured S3 bucket.</p>

    <div class="features-grid">
      <div class="feature">
        <h3>📊 Immutable Data Access</h3>
        <p>All legal data is served in read-only mode, ensuring data integrity and compliance.</p>
      </div>
      <div class="feature">
        <h3>🔍 Full-Text Search</h3>
        <p>Search across all legal documents, court decisions, and regulatory texts instantly.</p>
      </div>
      <div class="feature">
        <h3>🛠️ RESTful API</h3>
        <p>Programmatic access to all data with JSON and CSV export capabilities.</p>
      </div>
      <div class="feature">
        <h3>⚡ AI-Ready</h3>
        <p>Structured legal data perfect for machine learning, natural language processing, and legal tech applications.</p>
      </div>
    </div>
  </div>
</section>
{% endif %}

<!-- Add spacing before platform section -->
<div class="section-spacer"></div>

<section class="about-section">
  <div class="card">
    <h2>About This Platform</h2>
    <p>Zeeker provides professional-grade access to Singapore's legal data ecosystem. Our platform automatically downloads and serves legal databases from secure cloud storage, offering researchers, legal professionals, and technologists reliable access to:</p>
    
    <div class="resource-categories">
      <div class="category">
        <h3>🏛️ Courts</h3>
        <p>Supreme Court decisions, High Court judgments, and appellate rulings</p>
      </div>
      <div class="category">
        <h3>🏛️ Government</h3>
        <p>Parliamentary debates, legislative documents, and regulatory updates</p>
      </div>
      <div class="category">
        <h3>📰 SG Law Watch</h3>
        <p>Legal news, analysis, and industry developments</p>
      </div>
      <div class="category">
        <h3>📋 Regulations</h3>
        <p>Statutory instruments, guidelines, and compliance frameworks</p>
      </div>
    </div>
    
    <div class="features-list">
      <h3>Platform Features</h3>
      <ul>
        <li>Automatic database synchronization from cloud storage</li>
        <li>Immutable data access ensuring consistency</li>
        <li>Custom styling optimized for legal professionals</li>
        <li>Full-text search across all resources</li>
        <li>RESTful API for programmatic access</li>
        <li>Export capabilities (JSON, CSV, SQL)</li>
        <li>Mobile-responsive interface</li>
        <li>Accessibility-compliant design</li>
      </ul>
    </div>
  </div>
</section>

<section class="api-section">
  <div class="card">
    <h2>🔌 API Access</h2>
    <p>Zeeker provides comprehensive API access to all legal data. Perfect for:</p>
    
    <div class="api-uses">
      <div class="use-case">
        <h3>🤖 AI & Machine Learning</h3>
        <p>Train models on structured legal text, case outcomes, and regulatory patterns</p>
      </div>
      <div class="use-case">
        <h3>📊 Legal Analytics</h3>
        <p>Analyze trends in court decisions, regulatory changes, and legal precedents</p>
      </div>
      <div class="use-case">
        <h3>🔍 Legal Research</h3>
        <p>Programmatic access for legal research tools and citation analysis</p>
      </div>
      <div class="use-case">
        <h3>🏢 Enterprise Integration</h3>
        <p>Integrate legal data into business intelligence and compliance systems</p>
      </div>
    </div>
    
    <div class="api-example">
      <h3>Quick Start</h3>
      <pre><code># Get all databases
curl https://data.zeeker.sg/.json

# Search across all data  
curl "https://data.zeeker.sg/-/search.json?q=contract+law"

# Query specific table
curl "https://data.zeeker.sg/courts/supreme_court.json?_shape=array"</code></pre>
    </div>
    
    <div class="api-links">
      <a href="/-/metadata" class="btn">View Full API Documentation</a>
      <a href="/-/search" class="btn btn-secondary">Try Search API</a>
    </div>
  </div>
</section>
{% endblock %}

{% block footer %}
<footer>
  <div class="footer-content">
    <div class="footer-links">
      <a href="/">Home</a>
      <a href="/-/metadata">API Documentation</a>
      <a href="/templates/pages/about">About</a>
      <a href="/templates/pages/sources">Data Sources</a>
      <a href="https://creativecommons.org/licenses/by/4.0/" target="_blank">License (CC-BY-4.0)</a>
    </div>
    <div class="footer-text">
      <p>&copy; 2025 Zeeker - Singapore Legal Data Backbone</p>
      <p>Professional access to legal data for research, analysis, and AI applications</p>
    </div>
  </div>
</footer>
{% endblock %}
</document_content>
</document>
<document index="16">
<source>./templates/query.html</source>
<document_content>
{% extends "default:query.html" %}

{% block extra_head %}
{{ super() }}
<meta name="description" content="SQL Query Interface - Zeeker Legal Data Backbone">
{% endblock %}

{% block nav %}
<header>
  <div class="header-content">
    <div class="header-left">
      <div class="logo">data.zeeker.sg</div>
      <div class="tagline">The Legal Data Backbone of the Zeeker Project</div>
    </div>
    <nav>
      <ul>
        <li><a href="/">Home</a></li>
        <li><a href="/-/metadata">API Info</a></li>
        <li><a href="/templates/pages/about">About</a></li>
      </ul>
    </nav>
  </div>
</header>
{% endblock %}

{% block content %}
<div class="query-header">
  <div class="breadcrumbs">
    <a href="/">🏠 Home</a>
    <span class="separator">→</span>
    {% if database %}
    <a href="/{{ database }}">{{ database|title }}</a>
    <span class="separator">→</span>
    <span>SQL Query</span>
    {% else %}
    <span>SQL Query</span>
    {% endif %}
  </div>
  
  <h1>💻 SQL Query Interface</h1>
  <p class="query-description">Execute custom SQL queries against Singapore's legal databases. Perfect for advanced analysis, data exploration, and research.</p>
</div>

<div class="sql-editor">
  <div class="editor-header">
    <h2>Query Editor</h2>
    <div class="editor-controls">
      {% if database %}
      <span class="current-database">Database: <strong>{{ database }}</strong></span>
      {% endif %}
      <button type="button" class="btn btn-secondary" onclick="clearQuery()">Clear</button>
      <button type="button" class="btn btn-secondary" onclick="formatQuery()">Format</button>
    </div>
  </div>
  
  <form method="get" class="query-form">
    {% if database %}
    <input type="hidden" name="database" value="{{ database }}">
    {% endif %}
    
    <div class="sql-editor-container">
      <textarea 
        name="sql" 
        class="sql-textarea"
        placeholder="-- Enter your SQL query here
-- Example: SELECT * FROM table_name LIMIT 10
-- Use CTRL+Enter to execute"
        aria-label="SQL Query"
        rows="10">{{ sql_query or '' }}</textarea>
      
      <div class="sql-suggestions" id="sql-suggestions"></div>
    </div>
    
    <div class="query-options">
      <div class="option-group">
        <label for="row-limit">Row Limit:</label>
        <select name="_size" id="row-limit">
          <option value="100"{% if request.args.get('_size') == '100' %} selected{% endif %}>100</option>
          <option value="500"{% if request.args.get('_size') == '500' %} selected{% endif %}>500</option>
          <option value="1000"{% if request.args.get('_size') == '1000' %} selected{% endif %}>1000</option>
          <option value="5000"{% if request.args.get('_size') == '5000' %} selected{% endif %}>5000</option>
        </select>
      </div>
      
      <div class="option-group">
        <label for="output-format">Output Format:</label>
        <select name="_format" id="output-format">
          <option value="table"{% if request.args.get('_format') == 'table' or not request.args.get('_format') %} selected{% endif %}>Table</option>
          <option value="json"{% if request.args.get('_format') == 'json' %} selected{% endif %}>JSON</option>
          <option value="csv"{% if request.args.get('_format') == 'csv' %} selected{% endif %}>CSV</option>
        </select>
      </div>
      
      <div class="option-group">
        <label>
          <input type="checkbox" name="_trace" value="1"{% if request.args.get('_trace') %} checked{% endif %}>
          Show execution trace
        </label>
      </div>
    </div>
    
    <div class="query-actions">
      <button type="submit" class="btn btn-primary">⚡ Execute Query</button>
      <button type="button" class="btn btn-secondary" onclick="saveQuery()">💾 Save Query</button>
      <button type="button" class="btn btn-secondary" onclick="shareQuery()">🔗 Share</button>
    </div>
  </form>
</div>

{% if not database %}
<div class="database-selector">
  <div class="card">
    <h3>📊 Available Databases</h3>
    <p>Select a database to explore its tables and run queries:</p>
    <div class="database-list">
      {% for db in databases %}
      <a href="/{{ db.name }}?sql=" class="database-option">
        <div class="db-name">{{ db.name|title }}</div>
        {% if db.table_count %}
        <div class="db-meta">{{ db.table_count }} table{{ db.table_count|pluralize }}</div>
        {% endif %}
      </a>
      {% endfor %}
    </div>
  </div>
</div>
{% endif %}

<div class="query-examples">
  <div class="card">
    <h3>📚 Example Queries</h3>
    <p>Get started with these common legal data queries:</p>
    
    <div class="examples-grid">
      <div class="example-card">
        <h4>🏛️ Court Decisions</h4>
        <pre><code>-- Find recent Supreme Court decisions
SELECT title, date, summary 
FROM court_decisions 
WHERE court = 'Supreme Court' 
ORDER BY date DESC 
LIMIT 20;</code></pre>
        <button class="btn btn-small" onclick="useExample(this)">Use This Query</button>
      </div>
      
      <div class="example-card">
        <h4>📊 Legal Statistics</h4>
        <pre><code>-- Count cases by court type
SELECT court, COUNT(*) as case_count
FROM court_decisions 
GROUP BY court 
ORDER BY case_count DESC;</code></pre>
        <button class="btn btn-small" onclick="useExample(this)">Use This Query</button>
      </div>
      
      <div class="example-card">
        <h4>🔍 Text Search</h4>
        <pre><code>-- Search for contract law cases
SELECT title, court, date
FROM court_decisions 
WHERE title LIKE '%contract%' 
   OR summary LIKE '%contract%'
ORDER BY date DESC;</code></pre>
        <button class="btn btn-small" onclick="useExample(this)">Use This Query</button>
      </div>
      
      <div class="example-card">
        <h4>📅 Time Analysis</h4>
        <pre><code>-- Cases by year
SELECT strftime('%Y', date) as year,
       COUNT(*) as cases
FROM court_decisions 
GROUP BY year 
ORDER BY year DESC;</code></pre>
        <button class="btn btn-small" onclick="useExample(this)">Use This Query</button>
      </div>
      
      <div class="example-card">
        <h4>🔗 Table Relationships</h4>
        <pre><code>-- Join multiple tables
SELECT d.title, d.date, j.name as judge
FROM court_decisions d
JOIN judges j ON d.judge_id = j.id
WHERE d.date > '2023-01-01';</code></pre>
        <button class="btn btn-small" onclick="useExample(this)">Use This Query</button>
      </div>
      
      <div class="example-card">
        <h4>📋 Schema Exploration</h4>
        <pre><code>-- View all tables in database
SELECT name, sql 
FROM sqlite_master 
WHERE type = 'table' 
ORDER BY name;</code></pre>
        <button class="btn btn-small" onclick="useExample(this)">Use This Query</button>
      </div>
    </div>
  </div>
</div>

{% if query_results %}
<div class="query-results">
  <div class="results-header">
    <h2>🎯 Query Results</h2>
    <div class="results-meta">
      {% if execution_time %}
      <span class="execution-time">Executed in {{ execution_time }}ms</span>
      {% endif %}
      {% if row_count %}
      <span class="row-count">{{ "{:,}".format(row_count) }} row{{ row_count|pluralize }}</span>
      {% endif %}
    </div>
    
    <div class="results-actions">
      <a href="{{ request.url.replace('_format=table', '_format=json').replace('&_format=table', '&_format=json') }}" class="btn">📊 JSON</a>
      <a href="{{ request.url.replace('_format=table', '_format=csv').replace('&_format=table', '&_format=csv') }}" class="btn">📈 CSV</a>
      <button class="btn" onclick="copyResults()">📋 Copy</button>
    </div>
  </div>
  
  {% if query_results.rows %}
  <div class="table-wrapper">
    <table class="rows-and-columns query-results-table">
      <thead>
        <tr>
          {% for column in query_results.columns %}
          <th>{{ column }}</th>
          {% endfor %}
        </tr>
      </thead>
      <tbody>
        {% for row in query_results.rows %}
        <tr>
          {% for cell in row %}
          <td>
            {% if cell is none %}
            <em class="null-value">NULL</em>
            {% elif cell|string|length > 200 %}
            <details class="long-text">
              <summary>{{ cell|truncate(50) }}</summary>
              <div class="full-text">{{ cell }}</div>
            </details>
            {% else %}
            {{ cell }}
            {% endif %}
          </td>
          {% endfor %}
        </tr>
        {% endfor %}
      </tbody>
    </table>
  </div>
  
  {% if query_results.truncated %}
  <div class="results-truncated">
    <p>⚠️ Results truncated. Showing first {{ query_results.rows|length }} rows. 
    <a href="{{ request.url }}&_size=5000">Show more</a> or use LIMIT in your query.</p>
  </div>
  {% endif %}
  
  {% else %}
  <div class="no-results">
    <p>✅ Query executed successfully but returned no rows.</p>
  </div>
  {% endif %}
</div>
{% endif %}

{% if query_error %}
<div class="query-error">
  <div class="card error-card">
    <h3>❌ Query Error</h3>
    <div class="error-message">
      <code>{{ query_error }}</code>
    </div>
    
    <div class="error-help">
      <h4>💡 Common Solutions:</h4>
      <ul>
        <li>Check table and column names for typos</li>
        <li>Use double quotes for table names with spaces: <code>"table name"</code></li>
        <li>Verify JOIN conditions and foreign keys</li>
        <li>Use single quotes for string literals: <code>'text value'</code></li>
        <li>Check SQL syntax - SQLite dialect</li>
      </ul>
    </div>
  </div>
</div>
{% endif %}

<div class="sql-help">
  <div class="card">
    <h3>ℹ️ SQL Query Help</h3>
    
    <div class="help-sections">
      <div class="help-section">
        <h4>🎯 Tips for Legal Data Queries</h4>
        <ul>
          <li>Use <code>LIKE '%keyword%'</code> for text searches in legal documents</li>
          <li>Filter by date ranges: <code>WHERE date BETWEEN '2023-01-01' AND '2024-01-01'</code></li>
          <li>Group by court type: <code>GROUP BY court</code> for statistical analysis</li>
          <li>Order by relevance: <code>ORDER BY date DESC, title ASC</code></li>
          <li>Limit results for large datasets: <code>LIMIT 100</code></li>
        </ul>
      </div>
      
      <div class="help-section">
        <h4>⌨️ Keyboard Shortcuts</h4>
        <ul>
          <li><kbd>Ctrl+Enter</kbd> - Execute query</li>
          <li><kbd>Ctrl+/</kbd> - Toggle comments</li>
          <li><kbd>Tab</kbd> - Indent selected text</li>
          <li><kbd>Shift+Tab</kbd> - Unindent selected text</li>
        </ul>
      </div>
      
      <div class="help-section">
        <h4>🔧 SQLite Functions</h4>
        <ul>
          <li><code>strftime('%Y', date)</code> - Extract year from date</li>
          <li><code>LENGTH(text)</code> - Get text length</li>
          <li><code>UPPER(text)</code> - Convert to uppercase</li>
          <li><code>COUNT(*)</code> - Count rows</li>
          <li><code>GROUP_CONCAT(column)</code> - Concatenate values</li>
        </ul>
      </div>
    </div>
  </div>
</div>

<script>
function clearQuery() {
  document.querySelector('.sql-textarea').value = '';
}

function formatQuery() {
  // Basic SQL formatting
  const textarea = document.querySelector('.sql-textarea');
  let sql = textarea.value;
  
  // Simple formatting rules
  sql = sql.replace(/\s+/g, ' '); // Normalize whitespace
  sql = sql.replace(/\b(SELECT|FROM|WHERE|GROUP BY|ORDER BY|HAVING|JOIN|LEFT JOIN|RIGHT JOIN|INNER JOIN|ON|AND|OR)\b/gi, '\n$1');
  sql = sql.replace(/,/g, ',\n  '); // Commas on new lines with indent
  sql = sql.trim();
  
  textarea.value = sql;
}

function useExample(button) {
  const code = button.previousElementSibling.textContent;
  document.querySelector('.sql-textarea').value = code.trim();
  document.querySelector('.sql-textarea').focus();
}

function saveQuery() {
  const sql = document.querySelector('.sql-textarea').value;
  if (sql.trim()) {
    localStorage.setItem('saved_sql_query', sql);
    alert('Query saved locally!');
  }
}

function shareQuery() {
  const sql = document.querySelector('.sql-textarea').value;
  if (sql.trim()) {
    const url = new URL(window.location);
    url.searchParams.set('sql', sql);
    navigator.clipboard.writeText(url.toString()).then(() => {
      alert('Query URL copied to clipboard!');
    });
  }
}

function copyResults() {
  const table = document.querySelector('.query-results-table');
  if (table) {
    const text = Array.from(table.querySelectorAll('tr')).map(row => 
      Array.from(row.querySelectorAll('th, td')).map(cell => cell.textContent.trim()).join('\t')
    ).join('\n');
    
    navigator.clipboard.writeText(text).then(() => {
      alert('Results copied to clipboard!');
    });
  }
}

// Keyboard shortcuts
document.addEventListener('keydown', function(e) {
  if (e.ctrlKey && e.key === 'Enter') {
    e.preventDefault();
    document.querySelector('.query-form').submit();
  }
});

// Auto-save query
const textarea = document.querySelector('.sql-textarea');
if (textarea) {
  setInterval(() => {
    if (textarea.value.trim()) {
      localStorage.setItem('auto_saved_query', textarea.value);
    }
  }, 10000); // Auto-save every 10 seconds
  
  // Load auto-saved query if no current query
  if (!textarea.value.trim()) {
    const saved = localStorage.getItem('auto_saved_query');
    if (saved) {
      textarea.value = saved;
    }
  }
}
</script>
{% endblock %}
</document_content>
</document>
<document index="17">
<source>./templates/row.html</source>
<document_content>
{% extends "default:row.html" %}

{% block extra_head %}
{{ super() }}
<meta name="description" content="View record details in {{ table }} - {{ database }}">
{% endblock %}

{% block nav %}
<header>
  <div class="header-content">
    <div class="header-left">
      <div class="logo">data.zeeker.sg</div>
      <div class="tagline">The Legal Data Backbone of the Zeeker Project</div>
    </div>
    <nav>
      <ul>
        <li><a href="/">Home</a></li>
        <li><a href="/-/metadata">API Info</a></li>
        <li><a href="/templates/pages/about">About</a></li>
      </ul>
    </nav>
  </div>
</header>
{% endblock %}

{% block title %}{{ display_value or "Record" }} - {{ table }} - {{ database }}{% endblock %}

{% block content %}
<div class="row-header">
  <div class="breadcrumbs">
    <a href="/">🏠 Home</a>
    <span class="separator">→</span>
    <a href="/{{ database }}">{{ database|title }}</a>
    <span class="separator">→</span>
    <a href="/{{ database }}/{{ table }}">{{ table|title }}</a>
    <span class="separator">→</span>
    <span>Record Details</span>
  </div>

  <div class="row-overview">
    <div class="row-info">
      <div class="row-summary">
        <h1 class="row-title">{{ table|title }} Record</h1>

        {% if display_value %}
        <p class="row-subtitle">{{ display_value }}</p>
        {% else %}
        <p class="row-subtitle">
          Individual record from the {{ table }} table
        </p>
        {% endif %}

        <div class="row-stats">
          <div class="stat-item">
            <span class="stat-number">📄</span>
            <span class="stat-label">single record</span>
          </div>
          {% if row_values and row_values|length %}
          <div class="stat-item">
            <span class="stat-number">{{ row_values|length }}</span>
            <span class="stat-label">field{{ row_values|length|pluralize }}</span>
          </div>
          {% endif %}
        </div>
      </div>

      <div class="row-actions-section">
        <div class="export-actions">
          <a href="{{ request.url }}.json" class="btn btn-secondary">📊 JSON</a>
          <a href="/{{ database }}/{{ table }}" class="btn btn-secondary">← Back to Table</a>
          {% if pks %}
          <a href="/{{ database }}?sql=SELECT+*+FROM+%22{{ table }}%22+WHERE+{{ pks|join('+AND+') }}" class="btn btn-secondary">💻 SQL</a>
          {% endif %}
        </div>
      </div>
    </div>
  </div>
</div>

{# Let Datasette handle the core record display #}
{{ super() }}

<section class="row-tools">
  <div class="card">
    <h2>🛠️ Record Tools</h2>

    <div class="tools-grid">
      <div class="tool">
        <h3>📊 Export Record</h3>
        <p>Download this specific record in various formats</p>
        <div class="export-options">
          <a href="{{ request.url }}.json" class="btn">JSON Format</a>
          <a href="{{ request.url }}.csv" class="btn">CSV Format</a>
        </div>
      </div>

      <div class="tool">
        <h3>🔍 Find Similar</h3>
        <p>Search for records with similar characteristics</p>
        <a href="/{{ database }}/{{ table }}" class="btn">Browse All Records</a>
      </div>

      <div class="tool">
        <h3>💻 Query Builder</h3>
        <p>Build custom SQL queries based on this record</p>
        {% if pk_path %}
        <a href="/{{ database }}?sql=SELECT+*+FROM+%22{{ table }}%22+WHERE+{{ pk_path }}+LIMIT+10" class="btn">Query Similar</a>
        {% else %}
        <a href="/{{ database }}?sql=SELECT+*+FROM+%22{{ table }}%22+LIMIT+10" class="btn">Query Table</a>
        {% endif %}
      </div>

      <div class="tool">
        <h3>🔗 Table Context</h3>
        <p>Explore the parent table and related data</p>
        <div class="context-actions">
          <a href="/{{ database }}/{{ table }}" class="btn">View {{ table|title }} Table</a>
          <a href="/{{ database }}" class="btn">Browse {{ database|title }} Database</a>
        </div>
      </div>

      {% if foreign_key_tables %}
      <div class="tool">
        <h3>🔗 Related Data</h3>
        <p>Explore connections to other tables</p>
        <div class="related-tables">
          {% for fk_table in foreign_key_tables %}
          <a href="/{{ database }}/{{ fk_table.other_table }}" class="btn btn-small">{{ fk_table.other_table|title }}</a>
          {% endfor %}
        </div>
      </div>
      {% endif %}

      <div class="tool">
        <h3>📈 Field Analysis</h3>
        <p>Analyze field values and data patterns</p>
        {% if row and row|length > 0 %}
        {% set first_field = row|first %}
        <a href="/{{ database }}?sql=SELECT+%22{{ first_field }}%22,+COUNT(*)+FROM+%22{{ table }}%22+GROUP+BY+%22{{ first_field }}%22+ORDER+BY+COUNT(*)+DESC" class="btn">Analyze Values</a>
        {% else %}
        <a href="/{{ database }}/{{ table }}" class="btn">Browse Data</a>
        {% endif %}
      </div>
    </div>
  </div>
</section>

{% if row_values %}
<section class="record-metadata">
  <div class="card">
    <h2>📋 Record Metadata</h2>
    <p>Technical information about this record and its fields</p>

    <div class="metadata-grid">
      <div class="metadata-item">
        <h4>Record Source</h4>
        <p>
          <strong>Database:</strong> {{ database }}<br>
          <strong>Table:</strong> {{ table }}<br>
          <strong>Fields:</strong> {{ row_values|length }} total
        </p>
      </div>

      <div class="metadata-item">
        <h4>Data Access</h4>
        <p>
          <strong>JSON API:</strong> <a href="{{ request.url }}.json">{{ request.url }}.json</a><br>
          <strong>Last Updated:</strong> Real-time access<br>
          <strong>License:</strong> <a href="https://creativecommons.org/licenses/by/4.0/" target="_blank">CC-BY-4.0</a>
        </p>
      </div>
    </div>
  </div>
</section>
{% endif %}
{% endblock %}
</document_content>
</document>
<document index="18">
<source>./templates/table.html</source>
<document_content>
{% extends "default:table.html" %}

{% block extra_head %}
{{ super() }}
<meta name="description" content="Explore {{ table }} in {{ database }} - Singapore legal data for research and analysis">
<meta name="keywords" content="Singapore law, legal data, {{ table }}, {{ database }}, court decisions">
<meta property="og:title" content="{{ table|title }} - {{ database|title }} - data.zeeker.sg">
<meta property="og:description" content="Professional access to {{ table }} data from {{ database }} database">
<meta property="og:type" content="website">
{% endblock %}

{% block nav %}
<header>
  <div class="header-content">
    <div class="header-left">
      <div class="logo">data.zeeker.sg</div>
      <div class="tagline">The Legal Data Backbone of the Zeeker Project</div>
    </div>
    <nav>
      <ul>
        <li><a href="/">Home</a></li>
        <li><a href="/-/metadata">API Info</a></li>
        <li><a href="/templates/pages/about">About</a></li>
      </ul>
    </nav>
  </div>
</header>
{% endblock %}

{% block content %}
<div class="table-header">
  <div class="breadcrumbs">
    <a href="/">🏠 Home</a>
    <span class="separator">→</span>
    <a href="/{{ database }}">{{ database|title }}</a>
    <span class="separator">→</span>
    <span>{{ table|title }}</span>
  </div>

  <div class="table-overview">
    <div class="table-info">
      <div class="table-summary">
        <h1 class="table-title">{{ table|title }} Table</h1>

        {% if table_description %}
        <p class="table-subtitle">{{ table_description }}</p>
        {% else %}
        <p class="table-subtitle">
          Professional access to {{ table }} data from the {{ database }} database
        </p>
        {% endif %}

        <div class="table-stats">
          {% if row_count is defined and row_count is not none %}
          <div class="stat-item">
            <span class="stat-number">{{ "{:,}".format(row_count) }}</span>
            <span class="stat-label">total rows</span>
          </div>
          {% endif %}

          {% if columns %}
          <div class="stat-item">
            <span class="stat-number">{{ columns|length }}</span>
            <span class="stat-label">column{{ columns|length|pluralize }}</span>
          </div>
          {% endif %}

          {% if has_fts %}
          <div class="stat-item">
            <span class="stat-number">🔍</span>
            <span class="stat-label">searchable</span>
          </div>
          {% endif %}
        </div>
      </div>

      <div class="table-actions-section">
        <div class="export-actions">
          <a href="/{{ database }}/{{ table }}.json" class="btn btn-secondary">📊 JSON</a>
          <a href="/{{ database }}/{{ table }}.csv" class="btn btn-secondary">📈 CSV</a>
          <a href="/{{ database }}?sql=SELECT+*+FROM+%22{{ table }}%22+LIMIT+10" class="btn btn-secondary">💻 SQL</a>
        </div>
      </div>
    </div>
  </div>
</div>

{# Let Datasette handle the core table display #}
{{ super() }}

<section class="table-tools">
  <div class="card">
    <h2>🛠️ Table Tools</h2>

    <div class="tools-grid">
      <div class="tool">
        <h3>💻 SQL Query</h3>
        <p>Run custom SQL queries against this table</p>
        <a href="/{{ database }}?sql=SELECT+*+FROM+%22{{ table }}%22+LIMIT+100" class="btn">Query Table</a>
      </div>

      <div class="tool">
        <h3>📊 Schema</h3>
        <p>Explore table structure and column details</p>
        <a href="/{{ database }}?sql=PRAGMA+table_info(%22{{ table }}%22)" class="btn">View Schema</a>
      </div>

      <div class="tool">
        <h3>📈 Export Data</h3>
        <p>Download table data in various formats</p>
        <div class="export-options">
          <a href="/{{ database }}/{{ table }}.json" class="btn">JSON</a>
          <a href="/{{ database }}/{{ table }}.csv" class="btn">CSV</a>
        </div>
      </div>

      {% if has_fts %}
      <div class="tool">
        <h3>🔍 Search</h3>
        <p>Full-text search across table content</p>
        <a href="/{{ database }}/{{ table }}?_search=" class="btn">Search Table</a>
      </div>
      {% endif %}

      <div class="tool">
        <h3>📋 Sample Data</h3>
        <p>View random sample rows from this table</p>
        <a href="/{{ database }}?sql=SELECT+*+FROM+%22{{ table }}%22+ORDER+BY+RANDOM()+LIMIT+10" class="btn">Random Sample</a>
      </div>

      <div class="tool">
        <h3>📊 Statistics</h3>
        <p>Basic statistics and data distribution</p>
        <a href="/{{ database }}?sql=SELECT+COUNT(*)+as+total_rows+FROM+%22{{ table }}%22" class="btn">View Stats</a>
      </div>
    </div>
  </div>
</section>

{% if foreign_keys %}
<section class="related-tables">
  <div class="card">
    <h2>🔗 Related Tables</h2>
    <p>This table has relationships with other tables in the database:</p>

    <div class="relationship-grid">
      {% for fk in foreign_keys %}
      <div class="relationship-card">
        <h3>{{ fk.other_table|title }}</h3>
        <p>Linked via <code>{{ fk.column }}</code> → <code>{{ fk.other_column }}</code></p>
        <a href="/{{ database }}/{{ fk.other_table }}" class="btn">Explore {{ fk.other_table|title }}</a>
      </div>
      {% endfor %}
    </div>
  </div>
</section>
{% endif %}
{% endblock %}
</document_content>
</document>
<document index="19">
<source>./templates/pages/about.html</source>
<document_content>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>About - Zeeker Legal Data Backbone</title>
    <meta name="description" content="About Zeeker - Singapore's professional legal data backbone for research, analysis, and AI applications">
    
    <!-- Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700;900&family=Inter:wght@300;400;500;600&family=JetBrains+Mono:wght@400;500&display=swap" rel="stylesheet">
    
    <!-- Styles -->
    <link rel="stylesheet" href="/static/css/zeeker-theme.css">
    
    <style>
        .hero-section {
            text-align: center;
            padding: 4rem 0;
            background: linear-gradient(135deg, var(--color-bg-secondary), var(--color-bg-tertiary));
            border-radius: var(--border-radius-large);
            margin-bottom: 4rem;
        }
        
        .hero-section h1 {
            font-size: clamp(2.5rem, 5vw, 4rem);
            background: linear-gradient(135deg, var(--color-accent-cyan), var(--color-accent-magenta));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            margin-bottom: 1rem;
        }
        
        .hero-tagline {
            font-size: 1.3rem;
            color: var(--color-text-secondary);
            max-width: 600px;
            margin: 0 auto;
        }
        
        .feature-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 2rem;
            margin: 3rem 0;
        }
        
        .feature-card {
            background: var(--color-bg-secondary);
            border: 1px solid var(--color-border);
            border-radius: var(--border-radius-large);
            padding: 2rem;
            transition: var(--transition);
            position: relative;
            overflow: hidden;
        }
        
        .feature-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 3px;
            background: linear-gradient(90deg, var(--color-accent-cyan), var(--color-accent-magenta));
        }
        
        .feature-card:hover {
            transform: translateY(-4px);
            box-shadow: 0 12px 32px rgba(0, 212, 255, 0.15);
        }
        
        .feature-icon {
            font-size: 3rem;
            margin-bottom: 1rem;
            display: block;
        }
        
        .feature-title {
            color: var(--color-accent-cyan);
            margin-bottom: 1rem;
        }
        
        .stats-section {
            background: var(--color-bg-secondary);
            border: 1px solid var(--color-border);
            border-radius: var(--border-radius-large);
            padding: 3rem;
            margin: 4rem 0;
            text-align: center;
        }
        
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 2rem;
            margin-top: 2rem;
        }
        
        .stat-item {
            padding: 1.5rem;
            background: var(--color-bg-tertiary);
            border-radius: var(--border-radius);
            border: 1px solid var(--color-border);
        }
        
        .stat-number {
            font-family: var(--font-heading);
            font-size: 2.5rem;
            color: var(--color-accent-cyan);
            display: block;
            text-shadow: 0 0 10px rgba(0, 212, 255, 0.3);
        }
        
        .stat-label {
            color: var(--color-text-secondary);
            font-size: 0.9rem;
            margin-top: 0.5rem;
        }
        
        .timeline {
            margin: 4rem 0;
        }
        
        .timeline-item {
            display: flex;
            gap: 2rem;
            margin-bottom: 3rem;
            align-items: flex-start;
        }
        
        .timeline-date {
            font-family: var(--font-heading);
            color: var(--color-accent-cyan);
            font-weight: 700;
            min-width: 120px;
            text-align: right;
        }
        
        .timeline-content {
            flex: 1;
            background: var(--color-bg-secondary);
            border: 1px solid var(--color-border);
            border-radius: var(--border-radius-large);
            padding: 1.5rem;
            position: relative;
        }
        
        .timeline-content::before {
            content: '';
            position: absolute;
            left: -10px;
            top: 20px;
            width: 0;
            height: 0;
            border: 10px solid transparent;
            border-right-color: var(--color-border);
        }
        
        .timeline-content::after {
            content: '';
            position: absolute;
            left: -8px;
            top: 22px;
            width: 0;
            height: 0;
            border: 8px solid transparent;
            border-right-color: var(--color-bg-secondary);
        }
        
        .team-section {
            margin: 4rem 0;
        }
        
        .team-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 2rem;
            margin-top: 2rem;
        }
        
        .team-member {
            text-align: center;
            background: var(--color-bg-secondary);
            border: 1px solid var(--color-border);
            border-radius: var(--border-radius-large);
            padding: 2rem;
            transition: var(--transition);
        }
        
        .team-member:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 24px rgba(0, 212, 255, 0.1);
        }
        
        .team-avatar {
            width: 80px;
            height: 80px;
            border-radius: 50%;
            background: linear-gradient(135deg, var(--color-accent-cyan), var(--color-accent-magenta));
            margin: 0 auto 1rem;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 2rem;
            color: white;
        }
        
        .team-name {
            font-family: var(--font-heading);
            color: var(--color-accent-cyan);
            margin-bottom: 0.5rem;
        }
        
        .team-role {
            color: var(--color-text-secondary);
            font-size: 0.9rem;
            margin-bottom: 1rem;
        }
        
        .cta-section {
            background: linear-gradient(135deg, var(--color-bg-secondary), var(--color-bg-tertiary));
            border: 1px solid var(--color-border);
            border-radius: var(--border-radius-large);
            padding: 4rem;
            text-align: center;
            margin: 4rem 0;
        }
        
        .cta-buttons {
            display: flex;
            gap: 1rem;
            justify-content: center;
            margin-top: 2rem;
            flex-wrap: wrap;
        }
        
        @media (max-width: 768px) {
            .timeline-item {
                flex-direction: column;
                gap: 1rem;
            }
            
            .timeline-date {
                text-align: left;
                min-width: auto;
            }
            
            .timeline-content::before,
            .timeline-content::after {
                display: none;
            }
        }
    </style>
</head>

<body class="page-about">
    <header>
        <div class="header-content">
            <div class="header-left">
                <div class="logo">
                    <a href="/">ZEEKER</a>
                </div>
                <div class="tagline">The Legal Data Backbone</div>
            </div>
            <nav>
                <ul>
                    <li><a href="/">Home</a></li>
                    <li><a href="/-/metadata">API Info</a></li>
                    <li><a href="/templates/pages/about" class="active">About</a></li>
                </ul>
            </nav>
        </div>
    </header>

    <main>
        <div class="hero-section">
            <h1>About Zeeker</h1>
            <p class="hero-tagline">
                Singapore's premier legal data backbone, empowering research, analysis, and AI innovation 
                with comprehensive access to legal resources
            </p>
        </div>

        <section class="mission-section">
            <div class="card">
                <h2>🎯 Our Mission</h2>
                <p>
                    Zeeker transforms how legal professionals, researchers, and technologists access and analyze 
                    Singapore's legal data. We bridge the gap between traditional legal research and modern 
                    data science, providing a robust, professional-grade platform for legal intelligence.
                </p>
                
                <p>
                    Built on the powerful Datasette framework, Zeeker offers immutable, reliable access to 
                    comprehensive legal datasets including court decisions, parliamentary proceedings, 
                    regulatory updates, and legal commentary - all through an intuitive, futuristic interface 
                    designed for the modern legal professional.
                </p>
            </div>
        </section>

        <section class="features-section">
            <h2>🚀 Platform Capabilities</h2>
            <div class="feature-grid">
                <div class="feature-card">
                    <span class="feature-icon">🏛️</span>
                    <h3 class="feature-title">Comprehensive Legal Data</h3>
                    <p>
                        Access to Supreme Court decisions, High Court judgments, parliamentary debates, 
                        regulatory documents, and legal news from trusted Singapore sources.
                    </p>
                </div>

                <div class="feature-card">
                    <span class="feature-icon">🔒</span>
                    <h3 class="feature-title">Immutable & Reliable</h3>
                    <p>
                        All data served in read-only mode ensuring consistency, integrity, and compliance 
                        with professional standards for legal research.
                    </p>
                </div>

                <div class="feature-card">
                    <span class="feature-icon">🔍</span>
                    <h3 class="feature-title">Advanced Search</h3>
                    <p>
                        Full-text search across all legal documents with sophisticated filtering, 
                        faceted navigation, and intelligent query suggestions.
                    </p>
                </div>

                <div class="feature-card">
                    <span class="feature-icon">🛠️</span>
                    <h3 class="feature-title">Developer-Friendly API</h3>
                    <p>
                        RESTful APIs with JSON and CSV exports, SQL query interface, and comprehensive 
                        documentation for seamless integration.
                    </p>
                </div>

                <div class="feature-card">
                    <span class="feature-icon">🤖</span>
                    <h3 class="feature-title">AI-Ready Data</h3>
                    <p>
                        Structured, clean datasets perfect for machine learning, natural language processing, 
                        and legal AI applications.
                    </p>
                </div>

                <div class="feature-card">
                    <span class="feature-icon">⚡</span>
                    <h3 class="feature-title">Real-Time Updates</h3>
                    <p>
                        Automatic synchronization with source systems ensures you always have access 
                        to the latest legal information and decisions.
                    </p>
                </div>
            </div>
        </section>

        <section class="stats-section">
            <h2>📊 Platform Statistics</h2>
            <p>Powering legal research and innovation across Singapore</p>
            
            <div class="stats-grid">
                <div class="stat-item">
                    <span class="stat-number">10K+</span>
                    <div class="stat-label">Court Decisions</div>
                </div>
                <div class="stat-item">
                    <span class="stat-number">50K+</span>
                    <div class="stat-label">Legal Documents</div>
                </div>
                <div class="stat-item">
                    <span class="stat-number">24/7</span>
                    <div class="stat-label">API Availability</div>
                </div>
                <div class="stat-item">
                    <span class="stat-number">99.9%</span>
                    <div class="stat-label">Uptime SLA</div>
                </div>
            </div>
        </section>

        <section class="technology-section">
            <div class="card">
                <h2>🔧 Technology Stack</h2>
                <p>
                    Zeeker is built on cutting-edge, open-source technologies designed for reliability, 
                    performance, and scalability:
                </p>
                
                <div class="tech-grid">
                    <div class="tech-item">
                        <h4>🗄️ Datasette Core</h4>
                        <p>
                            Built on Simon Willison's Datasette - the premier platform for exploring 
                            and publishing data with built-in API generation and SQL query interface.
                        </p>
                    </div>
                    
                    <div class="tech-item">
                        <h4>📱 Responsive Design</h4>
                        <p>
                            Mobile-first, accessible interface that works seamlessly across devices 
                            while maintaining professional aesthetics.
                        </p>
                    </div>
                    
                    <div class="tech-item">
                        <h4>☁️ Cloud Infrastructure</h4>
                        <p>
                            Containerized deployment with automatic database synchronization from 
                            secure cloud storage for reliability and scalability.
                        </p>
                    </div>
                    
                    <div class="tech-item">
                        <h4>🔐 Security First</h4>
                        <p>
                            Read-only data access, secure API endpoints, and compliance with 
                            professional data handling standards.
                        </p>
                    </div>
                </div>
            </div>
        </section>

        <section class="timeline">
            <h2>📅 Development Timeline</h2>
            
            <div class="timeline-item">
                <div class="timeline-date">2025 Q1</div>
                <div class="timeline-content">
                    <h3>Platform Launch</h3>
                    <p>
                        Initial release of Zeeker with core legal databases, futuristic UI design, 
                        and comprehensive API access for Singapore legal data.
                    </p>
                </div>
            </div>
            
            <div class="timeline-item">
                <div class="timeline-date">2024 Q4</div>
                <div class="timeline-content">
                    <h3>Beta Testing</h3>
                    <p>
                        Extensive testing with legal professionals, researchers, and developers 
                        to refine the user experience and API functionality.
                    </p>
                </div>
            </div>
            
            <div class="timeline-item">
                <div class="timeline-date">2024 Q3</div>
                <div class="timeline-content">
                    <h3>Data Pipeline Development</h3>
                    <p>
                        Built automated systems for collecting, processing, and synchronizing 
                        legal data from multiple Singapore government and judicial sources.
                    </p>
                </div>
            </div>
            
            <div class="timeline-item">
                <div class="timeline-date">2024 Q2</div>
                <div class="timeline-content">
                    <h3>Project Inception</h3>
                    <p>
                        Identified the need for a comprehensive, professional-grade platform 
                        for accessing Singapore legal data for research and AI applications.
                    </p>
                </div>
            </div>
        </section>

        <section class="use-cases-section">
            <div class="card">
                <h2>💼 Use Cases</h2>
                <p>Zeeker serves diverse stakeholders in Singapore's legal ecosystem:</p>
                
                <div class="use-case-grid">
                    <div class="use-case">
                        <h3>👨‍💼 Legal Professionals</h3>
                        <ul>
                            <li>Research case precedents and legal trends</li>
                            <li>Track regulatory changes and updates</li>
                            <li>Analyze judicial decision patterns</li>
                            <li>Prepare legal briefs with comprehensive data</li>
                        </ul>
                    </div>
                    
                    <div class="use-case">
                        <h3>🔬 Academic Researchers</h3>
                        <ul>
                            <li>Conduct empirical legal studies</li>
                            <li>Analyze legislative trends over time</li>
                            <li>Study judicial behavior and decision-making</li>
                            <li>Publish data-driven legal scholarship</li>
                        </ul>
                    </div>
                    
                    <div class="use-case">
                        <h3>💻 Technology Developers</h3>
                        <ul>
                            <li>Build legal tech applications and tools</li>
                            <li>Train AI models on legal text data</li>
                            <li>Develop legal analytics platforms</li>
                            <li>Create compliance monitoring systems</li>
                        </ul>
                    </div>
                    
                    <div class="use-case">
                        <h3>🏢 Enterprise Users</h3>
                        <ul>
                            <li>Integrate legal data into business intelligence</li>
                            <li>Monitor regulatory compliance requirements</li>
                            <li>Automate legal risk assessment</li>
                            <li>Support strategic decision-making</li>
                        </ul>
                    </div>
                </div>
            </div>
        </section>

        <section class="cta-section">
            <h2>🚀 Get Started Today</h2>
            <p>
                Join Singapore's leading legal professionals, researchers, and developers who rely on 
                Zeeker for comprehensive legal data access. Whether you're conducting research, 
                building applications, or analyzing trends, Zeeker provides the tools you need.
            </p>
            
            <div class="cta-buttons">
                <a href="/" class="btn btn-primary">🏠 Explore Databases</a>
                <a href="/-/metadata" class="btn btn-secondary">📊 View API Documentation</a>
                <a href="/templates/pages/sources" class="btn btn-secondary">📋 Data Sources</a>
            </div>
        </section>
    </main>

    <footer>
        <div class="footer-content">
            <div class="footer-links">
                <a href="/">Home</a>
                <a href="/-/metadata">API Documentation</a>
                <a href="/templates/pages/about">About</a>
                <a href="/templates/pages/sources">Data Sources</a>
                <a href="https://creativecommons.org/licenses/by/4.0/" target="_blank">License (CC-BY-4.0)</a>
            </div>
            <div class="footer-text">
                <p>&copy; 2025 Zeeker - Singapore Legal Data Backbone</p>
                <p>Empowering legal innovation through professional data access</p>
            </div>
        </div>
    </footer>

    <!-- JavaScript -->
    <script src="/static/js/zeeker-enhanced.js"></script>
</body>
</html>
</document_content>
</document>
<document index="20">
<source>./templates/pages/sources.html</source>
<document_content>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Data Sources - Zeeker Legal Data Backbone</title>
    <meta name="description" content="Data sources and attribution for Singapore legal information available through Zeeker">
    
    <!-- Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700;900&family=Inter:wght@300;400;500;600&family=JetBrains+Mono:wght@400;500&display=swap" rel="stylesheet">
    
    <!-- Styles -->
    <link rel="stylesheet" href="/static/css/zeeker-theme.css">
    
    <style>
        .hero-section {
            text-align: center;
            padding: 3rem 0;
            background: linear-gradient(135deg, var(--color-bg-secondary), var(--color-bg-tertiary));
            border-radius: var(--border-radius-large);
            margin-bottom: 3rem;
        }
        
        .hero-section h1 {
            background: linear-gradient(135deg, var(--color-accent-cyan), var(--color-accent-magenta));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            margin-bottom: 1rem;
        }
        
        .source-category {
            margin: 3rem 0;
        }
        
        .category-header {
            display: flex;
            align-items: center;
            gap: 1rem;
            margin-bottom: 2rem;
            padding-bottom: 1rem;
            border-bottom: 2px solid var(--color-accent-cyan);
        }
        
        .category-icon {
            font-size: 2rem;
        }
        
        .category-title {
            font-family: var(--font-heading);
            color: var(--color-accent-cyan);
            margin: 0;
        }
        
        .category-description {
            color: var(--color-text-secondary);
            margin: 0;
            font-size: 0.95rem;
        }
        
        .source-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
            gap: 1.5rem;
        }
        
        .source-card {
            background: var(--color-bg-secondary);
            border: 1px solid var(--color-border);
            border-radius: var(--border-radius-large);
            padding: 1.5rem;
            transition: var(--transition);
            position: relative;
        }
        
        .source-card:hover {
            transform: translateY(-2px);
            border-color: var(--color-border-hover);
            box-shadow: 0 8px 24px rgba(0, 212, 255, 0.1);
        }
        
        .source-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 1rem;
        }
        
        .source-name {
            font-family: var(--font-heading);
            color: var(--color-text-primary);
            margin: 0 0 0.5rem 0;
            font-size: 1.1rem;
        }
        
        .source-url {
            font-size: 0.8rem;
            color: var(--color-accent-cyan);
            word-break: break-all;
        }
        
        .source-status {
            padding: 0.2rem 0.6rem;
            border-radius: 12px;
            font-size: 0.7rem;
            font-weight: 600;
            text-transform: uppercase;
            white-space: nowrap;
        }
        
        .status-active {
            background: rgba(74, 222, 128, 0.2);
            color: #4ade80;
        }
        
        .status-maintenance {
            background: rgba(251, 191, 36, 0.2);
            color: #fbbf24;
        }
        
        .status-deprecated {
            background: rgba(239, 68, 68, 0.2);
            color: #ef4444;
        }
        
        .source-description {
            color: var(--color-text-secondary);
            line-height: 1.5;
            margin-bottom: 1rem;
        }
        
        .source-meta {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 1rem;
            margin: 1rem 0;
            padding: 1rem;
            background: var(--color-bg-primary);
            border-radius: var(--border-radius);
            border: 1px solid var(--color-border);
        }
        
        .meta-item {
            display: flex;
            flex-direction: column;
        }
        
        .meta-label {
            font-size: 0.8rem;
            color: var(--color-text-muted);
            margin-bottom: 0.2rem;
        }
        
        .meta-value {
            font-weight: 500;
            color: var(--color-text-primary);
        }
        
        .source-tables {
            margin-top: 1rem;
        }
        
        .source-tables h4 {
            color: var(--color-accent-cyan);
            margin: 0 0 0.5rem 0;
            font-size: 0.9rem;
        }
        
        .table-list {
            display: flex;
            flex-wrap: wrap;
            gap: 0.5rem;
        }
        
        .table-tag {
            padding: 0.2rem 0.6rem;
            background: rgba(0, 212, 255, 0.1);
            border: 1px solid var(--color-accent-cyan);
            border-radius: 12px;
            font-size: 0.8rem;
            color: var(--color-accent-cyan);
        }
        
        .license-section {
            background: var(--color-bg-secondary);
            border: 1px solid var(--color-border);
            border-radius: var(--border-radius-large);
            padding: 2rem;
            margin: 4rem 0;
        }
        
        .license-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 1.5rem;
            margin-top: 1.5rem;
        }
        
        .license-item {
            background: var(--color-bg-tertiary);
            border: 1px solid var(--color-border);
            border-radius: var(--border-radius);
            padding: 1.5rem;
        }
        
        .license-name {
            font-family: var(--font-heading);
            color: var(--color-accent-cyan);
            margin-bottom: 0.5rem;
        }
        
        .update-schedule {
            background: var(--color-bg-secondary);
            border: 1px solid var(--color-border);
            border-radius: var(--border-radius-large);
            padding: 2rem;
            margin: 3rem 0;
        }
        
        .schedule-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1rem;
            margin-top: 1.5rem;
        }
        
        .schedule-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 1rem;
            background: var(--color-bg-tertiary);
            border-radius: var(--border-radius);
            border: 1px solid var(--color-border);
        }
        
        .schedule-source {
            font-weight: 500;
        }
        
        .schedule-frequency {
            font-size: 0.9rem;
            color: var(--color-text-secondary);
        }
        
        .contact-section {
            background: linear-gradient(135deg, var(--color-bg-secondary), var(--color-bg-tertiary));
            border: 1px solid var(--color-border);
            border-radius: var(--border-radius-large);
            padding: 3rem;
            text-align: center;
            margin: 4rem 0;
        }
        
        .contact-buttons {
            display: flex;
            gap: 1rem;
            justify-content: center;
            margin-top: 2rem;
            flex-wrap: wrap;
        }
    </style>
</head>

<body class="page-sources">
    <header>
        <div class="header-content">
            <div class="header-left">
                <div class="logo">
                    <a href="/">ZEEKER</a>
                </div>
                <div class="tagline">The Legal Data Backbone</div>
            </div>
            <nav>
                <ul>
                    <li><a href="/">Home</a></li>
                    <li><a href="/-/metadata">API Info</a></li>
                    <li><a href="/templates/pages/about">About</a></li>
                    <li><a href="/templates/pages/sources" class="active">Sources</a></li>
                </ul>
            </nav>
        </div>
    </header>

    <main>
        <div class="hero-section">
            <h1>📋 Data Sources</h1>
            <p>
                Comprehensive attribution and information about the legal data sources 
                powering Zeeker's Singapore legal database
            </p>
        </div>

        <section class="intro-section">
            <div class="card">
                <h2>🔍 Data Collection Philosophy</h2>
                <p>
                    Zeeker aggregates legal information from authoritative Singapore government and judicial sources, 
                    ensuring accuracy, completeness, and legal compliance. All data is collected through automated 
                    processes that respect robots.txt guidelines and terms of service.
                </p>
                
                <p>
                    We maintain strict data integrity standards and provide full attribution to original sources. 
                    Our platform serves as an access layer that enhances discoverability while respecting 
                    the intellectual property and licensing requirements of data providers.
                </p>
            </div>
        </section>

        <section class="source-category">
            <div class="category-header">
                <span class="category-icon">🏛️</span>
                <div>
                    <h2 class="category-title">Supreme Court & Judicial Sources</h2>
                    <p class="category-description">Court decisions, judgments, and legal precedents from Singapore's judicial system</p>
                </div>
            </div>
            
            <div class="source-grid">
                <div class="source-card">
                    <div class="source-header">
                        <div>
                            <h3 class="source-name">Singapore Courts</h3>
                            <a href="https://www.judiciary.gov.sg" class="source-url" target="_blank">judiciary.gov.sg</a>
                        </div>
                        <span class="source-status status-active">Active</span>
                    </div>
                    
                    <p class="source-description">
                        Official repository of court decisions from the Supreme Court, High Court, and subordinate courts. 
                        Includes judgments, grounds of decision, and case summaries.
                    </p>
                    
                    <div class="source-meta">
                        <div class="meta-item">
                            <span class="meta-label">Update Frequency</span>
                            <span class="meta-value">Daily</span>
                        </div>
                        <div class="meta-item">
                            <span class="meta-label">Coverage Period</span>
                            <span class="meta-value">2000 - Present</span>
                        </div>
                        <div class="meta-item">
                            <span class="meta-label">Last Updated</span>
                            <span class="meta-value">2025-05-28</span>
                        </div>
                        <div class="meta-item">
                            <span class="meta-label">Record Count</span>
                            <span class="meta-value">~12,500</span>
                        </div>
                    </div>
                    
                    <div class="source-tables">
                        <h4>Available Tables:</h4>
                        <div class="table-list">
                            <span class="table-tag">supreme_court_decisions</span>
                            <span class="table-tag">high_court_judgments</span>
                            <span class="table-tag">case_summaries</span>
                            <span class="table-tag">judicial_precedents</span>
                        </div>
                    </div>
                </div>

                <div class="source-card">
                    <div class="source-header">
                        <div>
                            <h3 class="source-name">LawNet</h3>
                            <a href="https://www.lawnet.sg" class="source-url" target="_blank">lawnet.sg</a>
                        </div>
                        <span class="source-status status-active">Active</span>
                    </div>
                    
                    <p class="source-description">
                        Comprehensive legal database maintained by the Singapore Academy of Law, 
                        containing unreported judgments and legal commentary.
                    </p>
                    
                    <div class="source-meta">
                        <div class="meta-item">
                            <span class="meta-label">Update Frequency</span>
                            <span class="meta-value">Weekly</span>
                        </div>
                        <div class="meta-item">
                            <span class="meta-label">Coverage Period</span>
                            <span class="meta-value">1995 - Present</span>
                        </div>
                        <div class="meta-item">
                            <span class="meta-label">Last Updated</span>
                            <span class="meta-value">2025-05-25</span>
                        </div>
                        <div class="meta-item">
                            <span class="meta-label">Record Count</span>
                            <span class="meta-value">~8,200</span>
                        </div>
                    </div>
                    
                    <div class="source-tables">
                        <h4>Available Tables:</h4>
                        <div class="table-list">
                            <span class="table-tag">unreported_judgments</span>
                            <span class="table-tag">legal_commentary</span>
                            <span class="table-tag">case_analysis</span>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <section class="source-category">
            <div class="category-header">
                <span class="category-icon">🏛️</span>
                <div>
                    <h2 class="category-title">Parliamentary & Legislative Sources</h2>
                    <p class="category-description">Parliamentary proceedings, legislation, and regulatory documents</p>
                </div>
            </div>
            
            <div class="source-grid">
                <div class="source-card">
                    <div class="source-header">
                        <div>
                            <h3 class="source-name">Parliament of Singapore</h3>
                            <a href="https://www.parliament.gov.sg" class="source-url" target="_blank">parliament.gov.sg</a>
                        </div>
                        <span class="source-status status-active">Active</span>
                    </div>
                    
                    <p class="source-description">
                        Official parliamentary proceedings including debates, bills, motions, and committee reports 
                        from Singapore's Parliament.
                    </p>
                    
                    <div class="source-meta">
                        <div class="meta-item">
                            <span class="meta-label">Update Frequency</span>
                            <span class="meta-value">Session-based</span>
                        </div>
                        <div class="meta-item">
                            <span class="meta-label">Coverage Period</span>
                            <span class="meta-value">1965 - Present</span>
                        </div>
                        <div class="meta-item">
                            <span class="meta-label">Last Updated</span>
                            <span class="meta-value">2025-05-27</span>
                        </div>
                        <div class="meta-item">
                            <span class="meta-label">Record Count</span>
                            <span class="meta-value">~25,000</span>
                        </div>
                    </div>
                    
                    <div class="source-tables">
                        <h4>Available Tables:</h4>
                        <div class="table-list">
                            <span class="table-tag">parliamentary_debates</span>
                            <span class="table-tag">bills_and_acts</span>
                            <span class="table-tag">committee_reports</span>
                            <span class="table-tag">ministerial_statements</span>
                        </div>
                    </div>
                </div>

                <div class="source-card">
                    <div class="source-header">
                        <div>
                            <h3 class="source-name">Singapore Statutes Online</h3>
                            <a href="https://sso.agc.gov.sg" class="source-url" target="_blank">sso.agc.gov.sg</a>
                        </div>
                        <span class="source-status status-active">Active</span>
                    </div>
                    
                    <p class="source-description">
                        Authoritative source for Singapore's legislation including Acts, subsidiary legislation, 
                        and consolidated statutes maintained by the Attorney-General's Chambers.
                    </p>
                    
                    <div class="source-meta">
                        <div class="meta-item">
                            <span class="meta-label">Update Frequency</span>
                            <span class="meta-value">As enacted</span>
                        </div>
                        <div class="meta-item">
                            <span class="meta-label">Coverage Period</span>
                            <span class="meta-value">1965 - Present</span>
                        </div>
                        <div class="meta-item">
                            <span class="meta-label">Last Updated</span>
                            <span class="meta-value">2025-05-28</span>
                        </div>
                        <div class="meta-item">
                            <span class="meta-label">Record Count</span>
                            <span class="meta-value">~1,500</span>
                        </div>
                    </div>
                    
                    <div class="source-tables">
                        <h4>Available Tables:</h4>
                        <div class="table-list">
                            <span class="table-tag">acts_and_statutes</span>
                            <span class="table-tag">subsidiary_legislation</span>
                            <span class="table-tag">consolidated_versions</span>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <section class="source-category">
            <div class="category-header">
                <span class="category-icon">📰</span>
                <div>
                    <h2 class="category-title">Legal News & Commentary</h2>
                    <p class="category-description">Legal news, analysis, and professional commentary on Singapore law</p>
                </div>
            </div>
            
            <div class="source-grid">
                <div class="source-card">
                    <div class="source-header">
                        <div>
                            <h3 class="source-name">SG Law Watch</h3>
                            <a href="https://sglawwatch.sg" class="source-url" target="_blank">sglawwatch.sg</a>
                        </div>
                        <span class="source-status status-active">Active</span>
                    </div>
                    
                    <p class="source-description">
                        Professional legal news and analysis covering Singapore's legal developments, 
                        case commentary, and legislative updates.
                    </p>
                    
                    <div class="source-meta">
                        <div class="meta-item">
                            <span class="meta-label">Update Frequency</span>
                            <span class="meta-value">Daily</span>
                        </div>
                        <div class="meta-item">
                            <span class="meta-label">Coverage Period</span>
                            <span class="meta-value">2020 - Present</span>
                        </div>
                        <div class="meta-item">
                            <span class="meta-label">Last Updated</span>
                            <span class="meta-value">2025-05-28</span>
                        </div>
                        <div class="meta-item">
                            <span class="meta-label">Record Count</span>
                            <span class="meta-value">~3,500</span>
                        </div>
                    </div>
                    
                    <div class="source-tables">
                        <h4>Available Tables:</h4>
                        <div class="table-list">
                            <span class="table-tag">legal_news</span>
                            <span class="table-tag">case_commentary</span>
                            <span class="table-tag">legal_analysis</span>
                            <span class="table-tag">industry_updates</span>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <section class="license-section">
            <h2>📄 Licensing & Attribution</h2>
            <p>
                Zeeker respects the intellectual property rights of all data providers and operates under 
                appropriate licensing frameworks:
            </p>
            
            <div class="license-grid">
                <div class="license-item">
                    <h3 class="license-name">Government Sources</h3>
                    <p>
                        Data from government websites is typically available under the 
                        Singapore Open Data License, allowing for reuse with proper attribution.
                    </p>
                </div>
                
                <div class="license-item">
                    <h3 class="license-name">Judicial Decisions</h3>
                    <p>
                        Court judgments and decisions are in the public domain and freely accessible 
                        for research and analysis purposes.
                    </p>
                </div>
                
                <div class="license-item">
                    <h3 class="license-name">Parliamentary Proceedings</h3>
                    <p>
                        Parliamentary debates and official proceedings are public records 
                        available for research and educational use.
                    </p>
                </div>
                
                <div class="license-item">
                    <h3 class="license-name">Zeeker Platform</h3>
                    <p>
                        Our aggregated database and platform interface are provided under 
                        Creative Commons Attribution 4.0 (CC-BY-4.0) license.
                    </p>
                </div>
            </div>
        </section>

        <section class="update-schedule">
            <h2>⏱️ Update Schedule</h2>
            <p>
                Different data sources have varying update frequencies based on their nature and availability:
            </p>
            
            <div class="schedule-grid">
                <div class="schedule-item">
                    <span class="schedule-source">Court Decisions</span>
                    <span class="schedule-frequency">Daily</span>
                </div>
                
                <div class="schedule-item">
                    <span class="schedule-source">Parliamentary Debates</span>
                    <span class="schedule-frequency">Session-based</span>
                </div>
                
                <div class="schedule-item">
                    <span class="schedule-source">Legal News</span>
                    <span class="schedule-frequency">Daily</span>
                </div>
                
                <div class="schedule-item">
                    <span class="schedule-source">Legislation</span>
                    <span class="schedule-frequency">As enacted</span>
                </div>
                
                <div class="schedule-item">
                    <span class="schedule-source">Platform Sync</span>
                    <span class="schedule-frequency">Hourly</span>
                </div>
                
                <div class="schedule-item">
                    <span class="schedule-source">Database Rebuild</span>
                    <span class="schedule-frequency">Daily</span>
                </div>
            </div>
        </section>

        <section class="quality-section">
            <div class="card">
                <h2>✅ Data Quality & Validation</h2>
                <p>
                    Zeeker implements comprehensive data quality measures to ensure accuracy and reliability:
                </p>
                
                <div class="quality-measures">
                    <div class="quality-item">
                        <h3>🔍 Source Verification</h3>
                        <p>All data sources are verified against official government and judicial websites</p>
                    </div>
                    
                    <div class="quality-item">
                        <h3>🔄 Consistency Checks</h3>
                        <p>Automated validation ensures data consistency and identifies anomalies</p>
                    </div>
                    
                    <div class="quality-item">
                        <h3>📅 Freshness Monitoring</h3>
                        <p>Active monitoring of source updates with alerts for stale or missing data</p>
                    </div>
                    
                    <div class="quality-item">
                        <h3>🏷️ Metadata Enrichment</h3>
                        <p>Enhanced metadata and classification for improved searchability</p>
                    </div>
                </div>
            </div>
        </section>

        <section class="contact-section">
            <h2>📞 Data Source Inquiries</h2>
            <p>
                Questions about data sources, licensing, or access? We're here to help with 
                any inquiries about the legal data available through Zeeker.
            </p>
            
            <div class="contact-buttons">
                <a href="mailto:data@zeeker.sg" class="btn btn-primary">📧 Contact Data Team</a>
                <a href="/-/metadata" class="btn btn-secondary">📊 Technical Documentation</a>
                <a href="/templates/pages/about" class="btn btn-secondary">ℹ️ Learn More</a>
            </div>
        </section>
    </main>

    <footer>
        <div class="footer-content">
            <div class="footer-links">
                <a href="/">Home</a>
                <a href="/-/metadata">API Documentation</a>
                <a href="/templates/pages/about">About</a>
                <a href="/templates/pages/sources">Data Sources</a>
                <a href="https://creativecommons.org/licenses/by/4.0/" target="_blank">License (CC-BY-4.0)</a>
            </div>
            <div class="footer-text">
                <p>&copy; 2025 Zeeker - Singapore Legal Data Backbone</p>
                <p>Comprehensive legal data with full source attribution and compliance</p>
            </div>
        </div>
    </footer>

    <!-- JavaScript -->
    <script src="/static/js/zeeker-enhanced.js"></script>
</body>
</html>
</document_content>
</document>
<document index="21">
<source>./static/js/zeeker-enhanced.js</source>
<document_content>
/**
 * Zeeker Enhanced JavaScript - Cleaned Version
 * Streamlined functionality for hero banner and core features
 */

class ZeekerEnhancer {
    constructor() {
        this.init();
    }

    init() {
        if (document.readyState === 'loading') {
            document.addEventListener('DOMContentLoaded', () => this.setupFeatures());
        } else {
            this.setupFeatures();
        }
    }

    setupFeatures() {
        console.log('Zeeker Enhanced: Initializing...');

        this.addBodyClasses();
        this.enhanceHeroBanner();
        this.addSearchEnhancements();
        this.addCopyButtons();
        this.addKeyboardShortcuts();
        this.setupScrollToTop();

        console.log('Zeeker Enhanced: Complete');
    }

    addBodyClasses() {
        document.body.classList.add('zeeker-enhanced');

        const path = window.location.pathname;
        if (path === '/') {
            document.body.classList.add('page-home');
        } else if (path.includes('/query')) {
            document.body.classList.add('page-query');
        } else if (path.match(/\/[^/]+\/[^/]+$/)) {
            document.body.classList.add('page-table');
        } else if (path.match(/\/[^/]+$/)) {
            document.body.classList.add('page-database');
        }
    }

    enhanceHeroBanner() {
        const heroImage = document.querySelector('.hero-background-image');
        if (!heroImage) return;

        console.log('Zeeker: Enhancing hero banner...');

        const handleImageLoad = () => {
            heroImage.classList.remove('loading');
            heroImage.classList.add('loaded');
            this.triggerContentAnimations();
        };

        const handleImageError = () => {
            heroImage.classList.remove('loading');
            heroImage.classList.add('error');
            this.triggerContentAnimations();
        };

        if (heroImage.complete && heroImage.naturalWidth > 0) {
            handleImageLoad();
        } else {
            heroImage.addEventListener('load', handleImageLoad);
            heroImage.addEventListener('error', handleImageError);

            setTimeout(() => {
                if (!heroImage.classList.contains('loaded') && !heroImage.classList.contains('error')) {
                    this.triggerContentAnimations();
                }
            }, 3000);
        }

        this.setupHeroSearch();
        this.setupParallax(heroImage);
    }

    triggerContentAnimations() {
        const contentWrapper = document.querySelector('.hero-content-wrapper');
        if (contentWrapper) {
            contentWrapper.classList.add('animate-in');
        }
    }

    setupHeroSearch() {
        const heroSearchInput = document.querySelector('.hero-search-input');
        const heroSearchForm = document.querySelector('.hero-search-form');

        if (!heroSearchInput || !heroSearchForm) return;

        // Enhanced form submission
        heroSearchForm.addEventListener('submit', (e) => {
            e.preventDefault();
            const query = heroSearchInput.value.trim();

            if (query) {
                const wrapper = heroSearchInput.closest('.hero-search-wrapper');
                wrapper.style.transform = 'scale(0.98)';
                wrapper.style.opacity = '0.7';

                setTimeout(() => {
                    window.location.href = `/-/search?q=${encodeURIComponent(query)}`;
                }, 300);
            }
        });

        // Focus effects
        heroSearchInput.addEventListener('focus', () => {
            const wrapper = heroSearchInput.closest('.hero-search-wrapper');
            if (wrapper) {
                wrapper.style.transform = 'translateY(-2px) scale(1.02)';
                wrapper.style.boxShadow = '0 0 35px rgba(0, 212, 255, 0.4)';
            }
        });

        heroSearchInput.addEventListener('blur', () => {
            const wrapper = heroSearchInput.closest('.hero-search-wrapper');
            if (wrapper) {
                wrapper.style.transform = 'translateY(0) scale(1)';
                wrapper.style.boxShadow = '';
            }
        });

        // Escape key
        heroSearchInput.addEventListener('keydown', (e) => {
            if (e.key === 'Escape') {
                heroSearchInput.blur();
                heroSearchInput.value = '';
            }
        });
    }

    setupParallax(heroImage) {
        // Only on larger screens and if motion is allowed
        if (window.innerWidth <= 768 || window.matchMedia('(prefers-reduced-motion: reduce)').matches) {
            return;
        }

        let ticking = false;

        const updateParallax = () => {
            const scrollY = window.pageYOffset;
            const scrollProgress = Math.min(scrollY / window.innerHeight, 1);

            const parallaxY = scrollY * -0.4;
            const scale = 1.05 + (scrollProgress * 0.02);
            const opacity = Math.max(0.1, 0.35 - (scrollProgress * 0.25));

            heroImage.style.transform = `translate3d(0, ${parallaxY}px, 0) scale(${scale})`;
            heroImage.style.opacity = opacity;

            ticking = false;
        };

        const handleScroll = () => {
            if (!ticking) {
                requestAnimationFrame(updateParallax);
                ticking = true;
            }
        };

        window.addEventListener('scroll', handleScroll, { passive: true });
    }

    addSearchEnhancements() {
        const searchInputs = document.querySelectorAll('input[type="search"], input[name="q"]');

        searchInputs.forEach(input => {
            if (input.classList.contains('hero-search-input')) return;

            input.addEventListener('keydown', (e) => {
                if (e.key === 'Escape') {
                    input.blur();
                }
                if (e.key === 'Enter' && e.ctrlKey) {
                    input.form?.submit();
                }
            });
        });
    }

    addCopyButtons() {
        const codeElements = document.querySelectorAll('pre code, .highlight');

        codeElements.forEach(element => {
            if (element.closest('.copy-button-added')) return;

            const wrapper = document.createElement('div');
            wrapper.className = 'code-wrapper copy-button-added';
            wrapper.style.position = 'relative';

            element.parentNode.insertBefore(wrapper, element);
            wrapper.appendChild(element);

            const copyButton = document.createElement('button');
            copyButton.className = 'copy-btn';
            copyButton.innerHTML = '📋 Copy';
            copyButton.style.cssText = `
                position: absolute;
                top: 8px;
                right: 8px;
                background: var(--color-accent-primary);
                color: white;
                border: none;
                padding: 0.4rem 0.8rem;
                border-radius: 4px;
                font-size: 0.8rem;
                cursor: pointer;
                z-index: 10;
                transition: all 0.2s ease;
            `;

            copyButton.addEventListener('click', () => {
                const text = element.textContent;
                navigator.clipboard.writeText(text).then(() => {
                    copyButton.innerHTML = '✅ Copied!';
                    copyButton.style.background = 'var(--color-success, #10B981)';
                    setTimeout(() => {
                        copyButton.innerHTML = '📋 Copy';
                        copyButton.style.background = 'var(--color-accent-primary)';
                    }, 2000);
                });
            });

            wrapper.appendChild(copyButton);
        });
    }

    addKeyboardShortcuts() {
        document.addEventListener('keydown', (e) => {
            if (e.target.tagName === 'INPUT' || e.target.tagName === 'TEXTAREA') return;

            switch (e.key) {
                case '/':
                    e.preventDefault();
                    const heroSearchInput = document.querySelector('.hero-search-input');
                    const searchInput = heroSearchInput || document.querySelector('input[name="q"]');
                    if (searchInput) {
                        searchInput.focus();
                    }
                    break;

                case 'h':
                    if (e.ctrlKey) {
                        e.preventDefault();
                        window.location.href = '/';
                    }
                    break;

                case 'b':
                    if (e.ctrlKey) {
                        e.preventDefault();
                        window.history.back();
                    }
                    break;
            }
        });
    }

    setupScrollToTop() {
        if (window.location.pathname !== '/') return;

        let scrollToTopBtn = document.querySelector('.scroll-to-top');

        if (!scrollToTopBtn) {
            scrollToTopBtn = document.createElement('button');
            scrollToTopBtn.className = 'scroll-to-top';
            scrollToTopBtn.innerHTML = '↑';
            scrollToTopBtn.style.cssText = `
                position: fixed;
                bottom: 2rem;
                right: 2rem;
                width: 50px;
                height: 50px;
                background: var(--color-accent-primary);
                color: white;
                border: none;
                border-radius: 50%;
                font-size: 1.2rem;
                cursor: pointer;
                z-index: 1000;
                opacity: 0;
                transform: translateY(100px);
                transition: all 0.3s ease;
                box-shadow: 0 4px 16px rgba(0, 0, 0, 0.2);
            `;
            document.body.appendChild(scrollToTopBtn);
        }

        window.addEventListener('scroll', () => {
            if (window.pageYOffset > window.innerHeight) {
                scrollToTopBtn.style.opacity = '1';
                scrollToTopBtn.style.transform = 'translateY(0)';
            } else {
                scrollToTopBtn.style.opacity = '0';
                scrollToTopBtn.style.transform = 'translateY(100px)';
            }
        });

        scrollToTopBtn.addEventListener('click', () => {
            window.scrollTo({
                top: 0,
                behavior: 'smooth'
            });
        });
    }
}

// Viewport height fix for mobile
function updateViewportHeight() {
    const vh = window.innerHeight * 0.01;
    document.documentElement.style.setProperty('--vh', `${vh}px`);
}

window.addEventListener('resize', updateViewportHeight);
window.addEventListener('orientationchange', updateViewportHeight);
updateViewportHeight();

// Initialize
new ZeekerEnhancer();
</document_content>
</document>
<document index="22">
<source>./static/css/zeeker-theme.css</source>
<document_content>
/*
 * Zeeker CSS - Clean Foundation
 * Streamlined, maintainable styling system
 */

:root {
    /* Color System */
    --color-bg-primary: #1a1a1a;
    --color-bg-secondary: #2a2a2a;
    --color-bg-tertiary: #3a3a3a;
    --color-bg-elevated: #404040;

    --color-accent-primary: #4A90E2;
    --color-accent-hover: #357ABD;
    --color-accent-cyan: #00D4FF;
    --color-accent-magenta: #FF006E;

    --color-text-primary: #FFFFFF;
    --color-text-secondary: #E0E0E0;
    --color-text-muted: #B0B0B0;

    --color-border: #404040;
    --color-border-hover: #606060;

    /* Spacing Scale */
    --space-xs: 0.5rem;
    --space-sm: 0.75rem;
    --space-md: 1rem;
    --space-lg: 1.5rem;
    --space-xl: 2rem;
    --space-2xl: 3rem;
    --space-3xl: 4rem;

    /* Typography Scale */
    --text-xs: 0.75rem;
    --text-sm: 0.875rem;
    --text-base: 1rem;
    --text-lg: 1.125rem;
    --text-xl: 1.25rem;
    --text-2xl: 1.5rem;
    --text-3xl: 1.875rem;
    --text-4xl: 2.25rem;

    /* Design System */
    --radius-sm: 0.375rem;
    --radius-md: 0.5rem;
    --radius-lg: 0.75rem;
    --radius-xl: 1rem;
    --radius-2xl: 1.5rem;

    --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
    --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
    --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1);

    --transition-fast: 150ms ease;
    --transition-base: 250ms ease;
    --transition-slow: 500ms ease;

    --z-dropdown: 1000;
    --z-sticky: 1020;
    --z-modal: 1040;

    /* Custom viewport height for mobile */
    --vh: 1vh;
}

/*
 * BASE STYLES
 */
*,
*::before,
*::after {
    box-sizing: border-box;
}

html {
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
    line-height: 1.6;
    -webkit-text-size-adjust: 100%;
}

body {
    margin: 0;
    padding: 0;
    background: var(--color-bg-primary);
    color: var(--color-text-secondary);
    font-size: var(--text-base);
    line-height: 1.6;
    min-height: 100vh;
    overflow-x: hidden;
}

/*
 * TYPOGRAPHY
 */
h1, h2, h3, h4, h5, h6 {
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
    font-weight: 600;
    line-height: 1.3;
    margin: 0 0 var(--space-md) 0;
    color: var(--color-text-primary);
}

h1 { font-size: var(--text-4xl); }
h2 { font-size: var(--text-3xl); }
h3 { font-size: var(--text-2xl); }
h4 { font-size: var(--text-xl); }
h5 { font-size: var(--text-lg); }
h6 { font-size: var(--text-base); }

p {
    margin: 0 0 var(--space-md) 0;
    color: var(--color-text-secondary);
}

a {
    color: var(--color-accent-primary);
    text-decoration: none;
    transition: var(--transition-fast);
}

a:hover {
    color: var(--color-accent-hover);
    text-decoration: underline;
}

/*
 * LAYOUT CONTAINERS
 */
.container {
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 var(--space-md);
}

@media (min-width: 640px) {
    .container {
        padding: 0 var(--space-lg);
    }
}

@media (min-width: 1024px) {
    .container {
        padding: 0 var(--space-xl);
    }
}

/*
 * HEADER
 */
header {
    background: var(--color-bg-secondary);
    border-bottom: 1px solid var(--color-border);
    position: sticky;
    top: 0;
    z-index: var(--z-sticky);
}

.page-home header {
    position: relative;
    z-index: 1001;
}

.header-content {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: var(--space-lg) 0;
    gap: var(--space-lg);
}

.header-left {
    display: flex;
    align-items: center;
    gap: var(--space-md);
}

.logo {
    font-size: var(--text-2xl);
    font-weight: 800;
    color: var(--color-text-primary);
    text-decoration: none;
}

.tagline {
    font-size: var(--text-sm);
    color: var(--color-text-muted);
    display: none;
}

@media (min-width: 768px) {
    .tagline {
        display: block;
    }
}

/*
 * NAVIGATION
 */
nav ul {
    list-style: none;
    margin: 0;
    padding: 0;
    display: flex;
    gap: var(--space-xs);
}

nav a {
    display: block;
    padding: var(--space-sm) var(--space-md);
    border-radius: var(--radius-md);
    color: var(--color-text-secondary);
    font-weight: 500;
    font-size: var(--text-sm);
    transition: var(--transition-fast);
    text-decoration: none;
}

nav a:hover,
nav a:focus {
    background: var(--color-bg-tertiary);
    color: var(--color-text-primary);
    text-decoration: none;
}

/*
 * MAIN CONTENT
 */
main {
    min-height: calc(100vh - 120px);
}

.page-home main {
    padding: 0;
    margin: 0;
}

main:not(.page-home main) {
    padding: var(--space-xl) 0;
}

/*
 * HERO SECTION
 */
.hero-enhanced {
    height: 100vh;
    height: calc(var(--vh, 1vh) * 100);
    width: 100vw;
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
    background: linear-gradient(135deg, var(--color-bg-primary), var(--color-bg-secondary));
    margin-left: calc(-50vw + 50%);
    margin-right: calc(-50vw + 50%);
}

.hero-bg-container {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 1;
}

.hero-background-animated {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-image: url('/static/images/supcourt-sg.png');
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    opacity: 0;
    filter: hue-rotate(180deg) brightness(0.7) contrast(1.2);
    transition: opacity 1s ease-in-out;
    transform: translateZ(0) scale(1.05);
    backface-visibility: hidden;
}

.hero-background-animated.loading {
    opacity: 0;
    background-color: var(--color-bg-tertiary);
}

.hero-background-animated.loaded {
    opacity: 0.3;
    animation: heroFloat 25s ease-in-out infinite;
}

.hero-background-animated.error {
    opacity: 0.2;
    background: linear-gradient(135deg, #2a2a2a 0%, #3a3a3a 50%, #2a2a2a 100%);
}

@keyframes heroFloat {
    0%, 100% {
        transform: translateZ(0) scale(1.05) translateY(0px);
    }
    25% {
        transform: translateZ(0) scale(1.06) translateY(-15px);
    }
    50% {
        transform: translateZ(0) scale(1.07) translateY(-10px);
    }
    75% {
        transform: translateZ(0) scale(1.06) translateY(-20px);
    }
}

.hero-overlay-gradient {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
        135deg,
        rgba(26, 26, 26, 0.85) 0%,
        rgba(42, 42, 42, 0.7) 30%,
        rgba(58, 58, 58, 0.6) 70%,
        rgba(26, 26, 26, 0.9) 100%
    );
    z-index: 2;
}

.hero-content-wrapper {
    position: relative;
    z-index: 3;
    text-align: center;
    max-width: 1000px;
    margin: 0 auto;
    padding: 0 var(--space-xl);
}

.hero-glass-card {
    background: rgba(26, 26, 26, 0.85);
    backdrop-filter: blur(25px);
    border-radius: 28px;
    border: 1px solid rgba(255, 255, 255, 0.15);
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.4), inset 0 1px 0 rgba(255, 255, 255, 0.2);
    padding: var(--space-2xl) var(--space-3xl);
    position: relative;
    overflow: hidden;
}

.hero-glass-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 3px;
    background: linear-gradient(90deg, var(--color-accent-cyan), var(--color-accent-magenta));
    opacity: 0.8;
}

.hero-title-main {
    font-size: clamp(2.5rem, 6vw, 4.5rem);
    font-weight: 800;
    margin-bottom: var(--space-lg);
    color: var(--color-text-primary);
    text-shadow: 0 0 30px rgba(0, 212, 255, 0.4);
    letter-spacing: -0.02em;
    line-height: 1.1;
}

.hero-tagline-main {
    font-size: clamp(1.1rem, 2.5vw, 1.4rem);
    color: var(--color-text-secondary);
    margin-bottom: var(--space-2xl);
    line-height: 1.5;
    font-weight: 400;
}

.hero-search-container {
    margin-bottom: var(--space-xl);
}

.hero-search-form {
    position: relative;
    width: 100%;
    max-width: 650px;
    margin: 0 auto;
}

.hero-search-wrapper {
    position: relative;
    width: 100%;
    background: rgba(255, 255, 255, 0.08);
    border: 2px solid rgba(0, 212, 255, 0.3);
    border-radius: 25px;
    backdrop-filter: blur(10px);
    transition: all 0.3s ease;
    overflow: hidden;
    display: flex;
    align-items: center;
}

.hero-search-wrapper:hover {
    border-color: rgba(0, 212, 255, 0.5);
    box-shadow: 0 0 25px rgba(0, 212, 255, 0.2);
}

.hero-search-wrapper:focus-within {
    border-color: rgba(0, 212, 255, 0.8);
    box-shadow: 0 0 30px rgba(0, 212, 255, 0.3);
}

.hero-search-input {
    width: 100%;
    min-width: 0;
    flex: 1;
    padding: 1.25rem 1.75rem;
    background: transparent;
    border: none;
    color: var(--color-text-primary);
    font-size: 1.1rem;
    outline: none;
    font-family: 'Inter', sans-serif;
    line-height: 1.4;
    box-sizing: border-box;
    margin: 0;
}

.hero-search-input::placeholder {
    color: rgba(255, 255, 255, 0.6);
    font-style: italic;
}

.hero-cta-group {
    display: flex;
    gap: var(--space-md);
    justify-content: center;
    flex-wrap: wrap;
    margin-bottom: var(--space-xl);
}

.cta-primary,
.cta-secondary {
    display: inline-flex;
    align-items: center;
    gap: var(--space-xs);
    padding: var(--space-md) var(--space-xl);
    border-radius: 12px;
    font-size: 1.1rem;
    font-weight: 600;
    text-decoration: none;
    transition: all 0.3s ease;
    cursor: pointer;
    white-space: nowrap;
}

.cta-primary {
    background: linear-gradient(135deg, var(--color-accent-cyan), var(--color-accent-magenta));
    color: white;
    border: none;
    box-shadow: 0 4px 16px rgba(0, 212, 255, 0.3);
}

.cta-primary:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(0, 212, 255, 0.4);
    color: white;
    text-decoration: none;
}

.cta-secondary {
    background: transparent;
    color: var(--color-accent-cyan);
    border: 2px solid var(--color-accent-cyan);
}

.cta-secondary:hover {
    background: rgba(0, 212, 255, 0.1);
    transform: translateY(-1px);
    color: var(--color-accent-cyan);
    text-decoration: none;
}

.hero-features {
    display: flex;
    justify-content: center;
    gap: var(--space-xl);
    flex-wrap: wrap;
    opacity: 0.9;
}

.hero-feature {
    display: flex;
    align-items: center;
    gap: var(--space-xs);
    font-size: 0.95rem;
    color: var(--color-text-muted);
    white-space: nowrap;
}

.hero-feature-icon {
    font-size: 1.1rem;
}

/*
 * SECTION SPACING
 */
.section-spacer {
    height: var(--space-3xl);
    width: 100%;
}

.databases-section,
.no-databases,
.about-section,
.api-section {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 var(--space-xl);
}

/*
 * CARDS SYSTEM
 */
.card {
    background: var(--color-bg-secondary);
    border: 1px solid var(--color-border);
    border-radius: var(--radius-xl);
    padding: var(--space-xl);
    margin-bottom: var(--space-xl);
    transition: var(--transition-base);
    position: relative;
    display: flex;
    flex-direction: column;
}

.card:hover {
    border-color: rgba(0, 212, 255, 0.3);
    box-shadow: var(--shadow-lg);
    transform: translateY(-1px);
}

.card-header {
    margin-bottom: var(--space-lg);
    padding-bottom: var(--space-md);
    border-bottom: 1px solid var(--color-border);
}

.card-title {
    font-size: var(--text-2xl);
    font-weight: 600;
    color: var(--color-text-primary);
    margin: 0 0 var(--space-sm) 0;
    line-height: 1.3;
}

.card-title a {
    color: inherit;
    text-decoration: none;
    transition: var(--transition-fast);
}

.card-title a:hover {
    color: var(--color-accent-cyan);
    text-decoration: none;
}

.card-description {
    font-size: var(--text-base);
    color: var(--color-text-muted);
    margin: 0;
    line-height: 1.5;
}

/*
 * DATABASE CARDS
 */
.database-grid {
    display: grid;
    gap: var(--space-xl);
    margin-top: var(--space-2xl);
    grid-template-columns: 1fr;
}

@media (min-width: 640px) {
    .database-grid {
        grid-template-columns: repeat(2, 1fr);
    }
}

@media (min-width: 1024px) {
    .database-grid {
        grid-template-columns: repeat(3, 1fr);
    }
}

.database-card {
    background: var(--color-bg-secondary);
    border: 1px solid var(--color-border);
    border-radius: var(--radius-xl);
    padding: var(--space-xl);
    transition: var(--transition-base);
    height: 100%;
    display: flex;
    flex-direction: column;
    position: relative;
    overflow: hidden;
}

.database-card:hover {
    transform: translateY(-2px);
    border-color: var(--color-accent-cyan);
    box-shadow: 0 8px 25px rgba(0, 212, 255, 0.15);
}

.database-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 3px;
    background: linear-gradient(90deg, var(--color-accent-cyan), var(--color-accent-magenta));
    opacity: 0;
    transition: var(--transition-base);
}

.database-card:hover::before {
    opacity: 1;
}

.database-title {
    font-size: var(--text-xl);
    font-weight: 600;
    color: var(--color-text-primary);
    margin: 0 0 var(--space-md) 0;
    text-decoration: none;
    transition: var(--transition-fast);
}

.database-title:hover {
    color: var(--color-accent-cyan);
    text-decoration: none;
}

.database-meta {
    display: flex;
    gap: var(--space-md);
    margin-bottom: var(--space-md);
    flex-wrap: wrap;
}

.table-count,
.database-size {
    display: inline-flex;
    align-items: center;
    gap: var(--space-xs);
    padding: var(--space-xs) var(--space-sm);
    background: var(--color-bg-tertiary);
    border: 1px solid var(--color-border);
    border-radius: var(--radius-md);
    font-size: var(--text-xs);
    color: var(--color-text-muted);
    font-weight: 500;
}

.database-description {
    flex-grow: 1;
    color: var(--color-text-secondary);
    margin-bottom: var(--space-lg);
    line-height: 1.5;
    font-size: var(--text-sm);
}

.database-actions {
    display: flex;
    gap: var(--space-sm);
    margin-top: auto;
    flex-wrap: wrap;
    align-items: center;
}

/*
 * BUTTONS
 */
.btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: var(--space-xs);
    padding: var(--space-sm) var(--space-md);
    border: 1px solid var(--color-border);
    border-radius: var(--radius-md);
    background: var(--color-bg-tertiary);
    color: var(--color-text-secondary);
    text-decoration: none;
    font-size: var(--text-sm);
    font-weight: 500;
    transition: var(--transition-fast);
    cursor: pointer;
    white-space: nowrap;
    min-height: 44px;
    line-height: 1;
}

.btn:hover,
.btn:focus {
    background: var(--color-bg-elevated);
    color: var(--color-text-primary);
    border-color: var(--color-accent-cyan);
    text-decoration: none;
    transform: translateY(-1px);
}

.btn-primary {
    background: linear-gradient(135deg, var(--color-accent-cyan), var(--color-accent-magenta));
    border-color: transparent;
    color: white;
    font-weight: 600;
}

.btn-primary:hover,
.btn-primary:focus {
    background: linear-gradient(135deg, var(--color-accent-cyan), var(--color-accent-magenta));
    color: white;
    transform: translateY(-1px);
    box-shadow: var(--shadow-md);
}

.btn-secondary {
    background: transparent;
    border-color: var(--color-border-hover);
    color: var(--color-text-muted);
}

.btn-secondary:hover,
.btn-secondary:focus {
    background: var(--color-bg-tertiary);
    color: var(--color-text-secondary);
    border-color: var(--color-accent-cyan);
}

/*
 * TABLES
 */
.table-wrapper {
    background: var(--color-bg-secondary);
    border: 1px solid var(--color-border);
    border-radius: var(--radius-xl);
    overflow: auto;
    margin: var(--space-xl) 0;
    box-shadow: var(--shadow-md);
}

table.rows-and-columns,
.table-wrapper table {
    width: 100%;
    border-collapse: collapse;
    background: var(--color-bg-secondary);
    margin: 0;
}

table.rows-and-columns th,
.table-wrapper table th {
    background: var(--color-bg-tertiary);
    color: var(--color-text-primary);
    padding: var(--space-sm) var(--space-md);
    text-align: left;
    font-weight: 600;
    font-size: var(--text-sm);
    border-bottom: 2px solid var(--color-border-hover);
    border-right: 1px solid var(--color-border);
}

table.rows-and-columns th:last-child,
.table-wrapper table th:last-child {
    border-right: none;
}

table.rows-and-columns td,
.table-wrapper table td {
    padding: var(--space-sm) var(--space-md);
    color: var(--color-text-secondary);
    border-bottom: 1px solid var(--color-border);
    border-right: 1px solid var(--color-border);
    font-size: var(--text-sm);
    vertical-align: top;
    word-wrap: break-word;
}

table.rows-and-columns td:last-child,
.table-wrapper table td:last-child {
    border-right: none;
}

table.rows-and-columns tr:hover,
.table-wrapper table tr:hover {
    background: var(--color-bg-elevated);
}

table.rows-and-columns tr:hover td,
.table-wrapper table tr:hover td {
    color: var(--color-text-primary);
}

table.rows-and-columns a,
.table-wrapper table a {
    color: var(--color-accent-primary);
}

table.rows-and-columns a:hover,
.table-wrapper table a:hover {
    color: var(--color-accent-hover);
}

/*
 * FORMS
 */
input, textarea, select {
    background: var(--color-bg-secondary);
    border: 1px solid var(--color-border);
    border-radius: var(--radius-md);
    color: var(--color-text-primary);
    padding: var(--space-sm);
    outline: none;
    transition: var(--transition-base);
}

input:focus, textarea:focus, select:focus {
    border-color: var(--color-accent-primary);
    box-shadow: 0 0 0 3px rgba(74, 144, 226, 0.15);
}

input::placeholder {
    color: var(--color-text-muted);
}

/*
 * UTILITIES
 */
.features-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: var(--space-xl);
    margin: var(--space-xl) 0;
}

.feature {
    background: var(--color-bg-tertiary);
    border: 1px solid var(--color-border);
    border-radius: var(--radius-lg);
    padding: var(--space-xl);
    text-align: center;
    transition: var(--transition-base);
}

.feature:hover {
    border-color: rgba(0, 212, 255, 0.3);
    transform: translateY(-2px);
}

.feature h3 {
    color: var(--color-accent-cyan);
    margin: 0 0 var(--space-md) 0;
    font-size: 1.1rem;
}

.feature p {
    margin: 0;
    color: var(--color-text-muted);
    line-height: 1.5;
    font-size: 0.9rem;
}

/*
 * MOBILE RESPONSIVE
 */
@media (max-width: 768px) {
    .hero-enhanced {
        height: 100vh;
        height: calc(var(--vh, 1vh) * 100);
    }

    .hero-glass-card {
        padding: var(--space-xl) var(--space-lg);
        border-radius: 20px;
    }

    .hero-search-wrapper {
        border-radius: 20px;
    }

    .hero-search-input {
        padding: var(--space-md) 1.25rem;
        font-size: var(--text-base);
    }

    .hero-cta-group {
        flex-direction: column;
        align-items: center;
    }

    .cta-primary,
    .cta-secondary {
        width: 100%;
        max-width: 300px;
        justify-content: center;
    }

    .hero-features {
        flex-direction: column;
        gap: var(--space-md);
        align-items: center;
    }

    .section-spacer {
        height: var(--space-2xl);
    }

    .databases-section,
    .no-databases,
    .about-section,
    .api-section {
        padding: 0 var(--space-md);
    }

    .header-content {
        flex-direction: column;
        text-align: center;
        gap: var(--space-md);
    }

    .header-left {
        flex-direction: column;
        gap: var(--space-sm);
    }

    nav ul {
        flex-wrap: wrap;
        justify-content: center;
    }

    .card,
    .database-card {
        padding: var(--space-lg);
        margin-bottom: var(--space-lg);
    }

    .database-actions {
        flex-direction: column;
        gap: var(--space-xs);
    }

    .database-actions > * {
        width: 100%;
        justify-content: center;
    }

    .table-wrapper {
        margin: var(--space-lg) calc(-1 * var(--space-md));
        border-radius: 0;
        border-left: none;
        border-right: none;
    }

    table.rows-and-columns,
    .table-wrapper table {
        min-width: 600px;
    }

    table.rows-and-columns th,
    table.rows-and-columns td,
    .table-wrapper table th,
    .table-wrapper table td {
        padding: var(--space-xs) var(--space-sm);
        font-size: var(--text-xs);
    }

    .features-grid {
        grid-template-columns: 1fr;
        gap: var(--space-lg);
    }

    .feature {
        padding: var(--space-lg);
    }
}

/*
 * SQL EDITOR STYLES
 */
.sql-editor-container {
    position: relative;
}

.sql-suggestions {
    position: absolute;
    top: 100%;
    left: 0;
    right: 0;
    background: var(--color-bg-secondary);
    border: 1px solid var(--color-border);
    border-top: none;
    border-radius: 0 0 var(--radius-md) var(--radius-md);
    max-height: 200px;
    overflow-y: auto;
    z-index: var(--z-dropdown);
    display: none;
}

.suggestion-item {
    padding: var(--space-sm);
    cursor: pointer;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    transition: var(--transition-fast);
}

.suggestion-item:hover {
    background: rgba(0, 212, 255, 0.1);
}

.suggestion-category {
    font-weight: 600;
    color: var(--color-accent-cyan);
    font-size: var(--text-sm);
}

.suggestion-description {
    font-size: var(--text-xs);
    color: var(--color-text-muted);
    margin-top: var(--space-xs);
}

/*
 * QUERY INTERFACE STYLES
 */
.query-header {
    margin-bottom: var(--space-2xl);
}

.query-description {
    color: var(--color-text-muted);
    font-size: var(--text-lg);
    margin-top: var(--space-md);
}

.sql-editor {
    background: var(--color-bg-secondary);
    border: 1px solid var(--color-border);
    border-radius: var(--radius-xl);
    padding: var(--space-xl);
    margin-bottom: var(--space-2xl);
}

.editor-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: var(--space-lg);
    padding-bottom: var(--space-md);
    border-bottom: 1px solid var(--color-border);
}

.editor-controls {
    display: flex;
    gap: var(--space-sm);
    align-items: center;
}

.current-database {
    color: var(--color-text-muted);
    font-size: var(--text-sm);
    margin-right: var(--space-md);
}

.sql-textarea {
    width: 100%;
    min-height: 200px;
    background: var(--color-bg-primary);
    border: 1px solid var(--color-border);
    border-radius: var(--radius-md);
    color: var(--color-text-primary);
    font-family: 'JetBrains Mono', monospace;
    font-size: var(--text-sm);
    line-height: 1.5;
    padding: var(--space-md);
    resize: vertical;
    outline: none;
    transition: var(--transition-base);
}

.sql-textarea:focus {
    border-color: var(--color-accent-primary);
    box-shadow: 0 0 0 3px rgba(74, 144, 226, 0.15);
}

.query-options {
    display: flex;
    gap: var(--space-lg);
    margin: var(--space-lg) 0;
    flex-wrap: wrap;
}

.option-group {
    display: flex;
    align-items: center;
    gap: var(--space-sm);
}

.option-group label {
    color: var(--color-text-secondary);
    font-size: var(--text-sm);
    font-weight: 500;
}

.query-actions {
    display: flex;
    gap: var(--space-sm);
    margin-top: var(--space-lg);
    flex-wrap: wrap;
}

/*
 * EXAMPLE QUERIES GRID
 */
.examples-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
    gap: var(--space-lg);
    margin-top: var(--space-lg);
}

.example-card {
    background: var(--color-bg-tertiary);
    border: 1px solid var(--color-border);
    border-radius: var(--radius-lg);
    padding: var(--space-lg);
    transition: var(--transition-base);
}

.example-card:hover {
    border-color: rgba(0, 212, 255, 0.3);
    transform: translateY(-1px);
}

.example-card h4 {
    color: var(--color-accent-cyan);
    margin: 0 0 var(--space-md) 0;
    font-size: var(--text-lg);
}

.example-card pre {
    background: var(--color-bg-primary);
    border: 1px solid var(--color-border);
    border-radius: var(--radius-sm);
    padding: var(--space-md);
    margin: var(--space-md) 0;
    overflow-x: auto;
}

.example-card code {
    color: var(--color-accent-cyan);
    font-family: 'JetBrains Mono', monospace;
    font-size: var(--text-sm);
    line-height: 1.4;
}

/*
 * RESULTS DISPLAY
 */
.query-results {
    margin-top: var(--space-2xl);
}

.results-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: var(--space-lg);
    flex-wrap: wrap;
    gap: var(--space-md);
}

.results-meta {
    display: flex;
    gap: var(--space-lg);
    color: var(--color-text-muted);
    font-size: var(--text-sm);
}

.results-actions {
    display: flex;
    gap: var(--space-sm);
}

.query-results-table {
    font-size: var(--text-sm);
}

.null-value {
    color: var(--color-text-muted);
    font-style: italic;
}

.long-text summary {
    cursor: pointer;
    color: var(--color-accent-primary);
}

.full-text {
    margin-top: var(--space-sm);
    padding: var(--space-sm);
    background: var(--color-bg-primary);
    border: 1px solid var(--color-border);
    border-radius: var(--radius-sm);
    max-height: 200px;
    overflow-y: auto;
}

/*
 * HELP SECTIONS
 */
.help-sections {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: var(--space-xl);
    margin-top: var(--space-lg);
}

.help-section h4 {
    color: var(--color-accent-cyan);
    margin: 0 0 var(--space-md) 0;
}

.help-section ul {
    list-style: none;
    padding: 0;
    margin: 0;
}

.help-section li {
    padding: var(--space-xs) 0;
    border-bottom: 1px solid rgba(255, 255, 255, 0.05);
    color: var(--color-text-secondary);
}

.help-section li:last-child {
    border-bottom: none;
}

.help-section code {
    background: var(--color-bg-tertiary);
    color: var(--color-accent-cyan);
    padding: var(--space-xs) var(--space-sm);
    border-radius: var(--radius-sm);
    font-family: 'JetBrains Mono', monospace;
    font-size: var(--text-xs);
}

.help-section kbd {
    background: var(--color-bg-tertiary);
    color: var(--color-text-primary);
    padding: var(--space-xs) var(--space-sm);
    border-radius: var(--radius-sm);
    border: 1px solid var(--color-border);
    font-family: 'JetBrains Mono', monospace;
    font-size: var(--text-xs);
}

/*
 * TABLE PAGE SPECIFIC STYLES
 */
.table-header {
    margin-bottom: var(--space-2xl);
}

.table-overview {
    background: var(--color-bg-secondary);
    border: 1px solid var(--color-border);
    border-radius: var(--radius-xl);
    padding: var(--space-xl);
    margin-bottom: var(--space-xl);
    position: relative;
    overflow: hidden;
}

.table-overview::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
    background: linear-gradient(90deg, var(--color-accent-cyan), var(--color-accent-magenta));
}

.table-info {
    display: flex;
    flex-direction: column;
    gap: var(--space-lg);
}

@media (min-width: 768px) {
    .table-info {
        flex-direction: row;
        align-items: center;
        justify-content: space-between;
    }
}

.table-summary {
    flex: 1;
}

.table-title {
    font-size: var(--text-4xl);
    font-weight: 700;
    color: var(--color-text-primary);
    margin: 0 0 var(--space-md) 0;
    line-height: 1.2;
}

.table-subtitle {
    font-size: var(--text-lg);
    color: var(--color-text-muted);
    margin: 0 0 var(--space-lg) 0;
    line-height: 1.4;
}

.table-stats {
    display: flex;
    gap: var(--space-lg);
    margin-bottom: var(--space-lg);
    flex-wrap: wrap;
}

.table-actions-section {
    display: flex;
    flex-direction: column;
    gap: var(--space-md);
    min-width: 250px;
}

@media (max-width: 767px) {
    .table-actions-section {
        min-width: auto;
        width: 100%;
    }
}

/*
 * ROW PAGE SPECIFIC STYLES
 */
.row-header {
    margin-bottom: var(--space-2xl);
}

.row-overview {
    background: var(--color-bg-secondary);
    border: 1px solid var(--color-border);
    border-radius: var(--radius-xl);
    padding: var(--space-xl);
    margin-bottom: var(--space-xl);
    position: relative;
    overflow: hidden;
}

.row-overview::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
    background: linear-gradient(90deg, var(--color-accent-magenta), var(--color-accent-cyan));
}

.row-info {
    display: flex;
    flex-direction: column;
    gap: var(--space-lg);
}

@media (min-width: 768px) {
    .row-info {
        flex-direction: row;
        align-items: center;
        justify-content: space-between;
    }
}

.row-summary {
    flex: 1;
}

.row-title {
    font-size: var(--text-3xl);
    font-weight: 700;
    color: var(--color-text-primary);
    margin: 0 0 var(--space-md) 0;
    line-height: 1.2;
}

.row-subtitle {
    font-size: var(--text-lg);
    color: var(--color-text-muted);
    margin: 0 0 var(--space-lg) 0;
    line-height: 1.4;
    font-style: italic;
}

.row-stats {
    display: flex;
    gap: var(--space-lg);
    margin-bottom: var(--space-lg);
    flex-wrap: wrap;
}

.row-actions-section {
    display: flex;
    flex-direction: column;
    gap: var(--space-md);
    min-width: 250px;
}

@media (max-width: 767px) {
    .row-actions-section {
        min-width: auto;
        width: 100%;
    }
}

/*
 * COMMON COMPONENTS
 */
.breadcrumbs {
    display: flex;
    align-items: center;
    gap: var(--space-sm);
    margin-bottom: var(--space-xl);
    font-size: var(--text-sm);
}

.breadcrumbs a {
    color: var(--color-text-muted);
}

.breadcrumbs a:hover {
    color: var(--color-accent-primary);
}

.separator {
    color: var(--color-text-muted);
}

.export-actions {
    display: flex;
    gap: var(--space-sm);
    align-items: center;
    justify-content: flex-end;
    flex-wrap: wrap;
}

@media (max-width: 767px) {
    .export-actions {
        justify-content: center;
    }
}

.tools-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: var(--space-lg);
    margin-top: var(--space-lg);
}

.tool {
    background: var(--color-bg-tertiary);
    border: 1px solid var(--color-border);
    border-radius: var(--radius-lg);
    padding: var(--space-lg);
    transition: var(--transition-base);
}

.tool:hover {
    border-color: rgba(0, 212, 255, 0.3);
    transform: translateY(-1px);
}

.tool h3 {
    color: var(--color-accent-cyan);
    margin: 0 0 var(--space-sm) 0;
    font-size: var(--text-lg);
}

.tool p {
    margin: 0 0 var(--space-md) 0;
    color: var(--color-text-muted);
    line-height: 1.5;
    font-size: var(--text-sm);
}

.export-options {
    display: flex;
    gap: var(--space-xs);
    align-items: center;
    flex-wrap: wrap;
}

.export-options .btn {
    font-size: var(--text-xs);
    padding: var(--space-xs) var(--space-sm);
    min-height: 32px;
}

/*
 * ACCESSIBILITY & PERFORMANCE
 */
@media (prefers-reduced-motion: reduce) {
    .hero-background-animated,
    .hero-background-animated.loaded {
        animation: none;
        transform: translateZ(0) scale(1.05);
    }

    .card:hover,
    .database-card:hover,
    .feature:hover,
    .cta-primary:hover,
    .cta-secondary:hover,
    .btn:hover,
    .tool:hover,
    .example-card:hover {
        transform: none;
    }
}

.sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
}
</document_content>
</document>
</documents>
